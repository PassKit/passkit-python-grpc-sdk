# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from passkit.io.common import common_objects_pb2 as passkit_dot_io_dot_common_dot_common__objects__pb2
from passkit.io.common import filter_pb2 as passkit_dot_io_dot_common_dot_filter__pb2
from passkit.io.common import integration_pb2 as passkit_dot_io_dot_common_dot_integration__pb2
from passkit.io.common import pagination_pb2 as passkit_dot_io_dot_common_dot_pagination__pb2
from passkit.io.common import project_pb2 as passkit_dot_io_dot_common_dot_project__pb2
from passkit.io.user import user_pb2 as passkit_dot_io_dot_user_dot_user__pb2


class UsersStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.createUser = channel.unary_unary(
                '/io.Users/createUser',
                request_serializer=passkit_dot_io_dot_user_dot_user__pb2.NewUser.SerializeToString,
                response_deserializer=passkit_dot_io_dot_user_dot_user__pb2.NewUserResponse.FromString,
                _registered_method=True)
        self.newUser = channel.unary_unary(
                '/io.Users/newUser',
                request_serializer=passkit_dot_io_dot_user_dot_user__pb2.NewUser.SerializeToString,
                response_deserializer=passkit_dot_io_dot_user_dot_user__pb2.JWT.FromString,
                _registered_method=True)
        self.verify = channel.unary_unary(
                '/io.Users/verify',
                request_serializer=passkit_dot_io_dot_user_dot_user__pb2.VerifyRequest.SerializeToString,
                response_deserializer=passkit_dot_io_dot_common_dot_common__objects__pb2.Boolean.FromString,
                _registered_method=True)
        self.resendVerificationEmail = channel.unary_unary(
                '/io.Users/resendVerificationEmail',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=passkit_dot_io_dot_common_dot_common__objects__pb2.Boolean.FromString,
                _registered_method=True)
        self.getUser = channel.unary_unary(
                '/io.Users/getUser',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=passkit_dot_io_dot_user_dot_user__pb2.GetUserResponse.FromString,
                _registered_method=True)
        self.login = channel.unary_unary(
                '/io.Users/login',
                request_serializer=passkit_dot_io_dot_user_dot_user__pb2.Credentials.SerializeToString,
                response_deserializer=passkit_dot_io_dot_user_dot_user__pb2.JWT.FromString,
                _registered_method=True)
        self.get2faBarcode = channel.unary_unary(
                '/io.Users/get2faBarcode',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=passkit_dot_io_dot_common_dot_common__objects__pb2.Url.FromString,
                _registered_method=True)
        self.resetPassword = channel.unary_unary(
                '/io.Users/resetPassword',
                request_serializer=passkit_dot_io_dot_user_dot_user__pb2.Credentials.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.sendPasswordResetLink = channel.unary_unary(
                '/io.Users/sendPasswordResetLink',
                request_serializer=passkit_dot_io_dot_user_dot_user__pb2.Username.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.changePassword = channel.unary_unary(
                '/io.Users/changePassword',
                request_serializer=passkit_dot_io_dot_user_dot_user__pb2.PasswordResetInput.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.changeEmail = channel.unary_unary(
                '/io.Users/changeEmail',
                request_serializer=passkit_dot_io_dot_user_dot_user__pb2.Email.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.confirmEmailChange = channel.unary_unary(
                '/io.Users/confirmEmailChange',
                request_serializer=passkit_dot_io_dot_user_dot_user__pb2.ConfirmEmailChangeInput.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.updateCompanyName = channel.unary_unary(
                '/io.Users/updateCompanyName',
                request_serializer=passkit_dot_io_dot_user_dot_user__pb2.CompanyName.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.getProjectsForUserQueryDeprecated = channel.unary_stream(
                '/io.Users/getProjectsForUserQueryDeprecated',
                request_serializer=passkit_dot_io_dot_common_dot_pagination__pb2.Pagination.SerializeToString,
                response_deserializer=passkit_dot_io_dot_common_dot_project__pb2.Project.FromString,
                _registered_method=True)
        self.getProjectsQueryDeprecated = channel.unary_stream(
                '/io.Users/getProjectsQueryDeprecated',
                request_serializer=passkit_dot_io_dot_common_dot_pagination__pb2.Pagination.SerializeToString,
                response_deserializer=passkit_dot_io_dot_common_dot_project__pb2.Project.FromString,
                _registered_method=True)
        self.getProjectsForUserQuery = channel.unary_stream(
                '/io.Users/getProjectsForUserQuery',
                request_serializer=passkit_dot_io_dot_common_dot_filter__pb2.Filters.SerializeToString,
                response_deserializer=passkit_dot_io_dot_common_dot_project__pb2.Project.FromString,
                _registered_method=True)
        self.getProjectsQuery = channel.unary_stream(
                '/io.Users/getProjectsQuery',
                request_serializer=passkit_dot_io_dot_common_dot_filter__pb2.Filters.SerializeToString,
                response_deserializer=passkit_dot_io_dot_common_dot_project__pb2.Project.FromString,
                _registered_method=True)
        self.getProjectByUuid = channel.unary_unary(
                '/io.Users/getProjectByUuid',
                request_serializer=passkit_dot_io_dot_common_dot_common__objects__pb2.Id.SerializeToString,
                response_deserializer=passkit_dot_io_dot_common_dot_project__pb2.Project.FromString,
                _registered_method=True)
        self.getProjectAndTemplateByShortCode = channel.unary_unary(
                '/io.Users/getProjectAndTemplateByShortCode',
                request_serializer=passkit_dot_io_dot_common_dot_common__objects__pb2.Id.SerializeToString,
                response_deserializer=passkit_dot_io_dot_common_dot_project__pb2.ProjectByShortCodeResult.FromString,
                _registered_method=True)
        self.getProjectsForUser = channel.unary_stream(
                '/io.Users/getProjectsForUser',
                request_serializer=passkit_dot_io_dot_common_dot_project__pb2.ProjectStatusFilter.SerializeToString,
                response_deserializer=passkit_dot_io_dot_common_dot_project__pb2.Project.FromString,
                _registered_method=True)
        self.getProjects = channel.unary_stream(
                '/io.Users/getProjects',
                request_serializer=passkit_dot_io_dot_common_dot_project__pb2.ProjectStatusFilter.SerializeToString,
                response_deserializer=passkit_dot_io_dot_common_dot_project__pb2.Project.FromString,
                _registered_method=True)
        self.getScannerConfig = channel.unary_unary(
                '/io.Users/getScannerConfig',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=passkit_dot_io_dot_user_dot_user__pb2.ScannerConfiguration.FromString,
                _registered_method=True)
        self.createScannerConfig = channel.unary_unary(
                '/io.Users/createScannerConfig',
                request_serializer=passkit_dot_io_dot_user_dot_user__pb2.ScannerConfiguration.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.updateScannerConfig = channel.unary_unary(
                '/io.Users/updateScannerConfig',
                request_serializer=passkit_dot_io_dot_user_dot_user__pb2.ScannerConfiguration.SerializeToString,
                response_deserializer=passkit_dot_io_dot_user_dot_user__pb2.ScannerConfiguration.FromString,
                _registered_method=True)
        self.createAuthorizationResource = channel.unary_unary(
                '/io.Users/createAuthorizationResource',
                request_serializer=passkit_dot_io_dot_user_dot_user__pb2.OAuth2AuthorizationRequest.SerializeToString,
                response_deserializer=passkit_dot_io_dot_common_dot_common__objects__pb2.Id.FromString,
                _registered_method=True)
        self.deleteAuthorizationResource = channel.unary_unary(
                '/io.Users/deleteAuthorizationResource',
                request_serializer=passkit_dot_io_dot_common_dot_common__objects__pb2.Id.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.refreshApiSecret = channel.unary_unary(
                '/io.Users/refreshApiSecret',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.deleteAccount = channel.unary_unary(
                '/io.Users/deleteAccount',
                request_serializer=passkit_dot_io_dot_user_dot_user__pb2.DeleteAccountRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.revokeLegacyCredentials = channel.unary_unary(
                '/io.Users/revokeLegacyCredentials',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.createTeamMember = channel.unary_unary(
                '/io.Users/createTeamMember',
                request_serializer=passkit_dot_io_dot_user_dot_user__pb2.NewTeamMember.SerializeToString,
                response_deserializer=passkit_dot_io_dot_common_dot_common__objects__pb2.Id.FromString,
                _registered_method=True)
        self.createPermissionsForTeamMember = channel.unary_unary(
                '/io.Users/createPermissionsForTeamMember',
                request_serializer=passkit_dot_io_dot_user_dot_user__pb2.TeamMemberPermissions.SerializeToString,
                response_deserializer=passkit_dot_io_dot_common_dot_common__objects__pb2.Id.FromString,
                _registered_method=True)
        self.updateTeamMemberPermissions = channel.unary_unary(
                '/io.Users/updateTeamMemberPermissions',
                request_serializer=passkit_dot_io_dot_user_dot_user__pb2.TeamMemberPermissions.SerializeToString,
                response_deserializer=passkit_dot_io_dot_user_dot_user__pb2.TeamMemberPermissions.FromString,
                _registered_method=True)
        self.patchTeamMemberPermissions = channel.unary_unary(
                '/io.Users/patchTeamMemberPermissions',
                request_serializer=passkit_dot_io_dot_user_dot_user__pb2.TeamMemberPermissions.SerializeToString,
                response_deserializer=passkit_dot_io_dot_user_dot_user__pb2.TeamMemberPermissions.FromString,
                _registered_method=True)
        self.getTeamMember = channel.unary_unary(
                '/io.Users/getTeamMember',
                request_serializer=passkit_dot_io_dot_common_dot_common__objects__pb2.Id.SerializeToString,
                response_deserializer=passkit_dot_io_dot_user_dot_user__pb2.GetTeamMemberResponse.FromString,
                _registered_method=True)
        self.getTeamMembers = channel.unary_stream(
                '/io.Users/getTeamMembers',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=passkit_dot_io_dot_user_dot_user__pb2.ListTeamMembersResponse.FromString,
                _registered_method=True)
        self.deleteTeamMember = channel.unary_unary(
                '/io.Users/deleteTeamMember',
                request_serializer=passkit_dot_io_dot_common_dot_common__objects__pb2.Id.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.getTeamMemberLogs = channel.unary_stream(
                '/io.Users/getTeamMemberLogs',
                request_serializer=passkit_dot_io_dot_user_dot_user__pb2.AuditLogRequest.SerializeToString,
                response_deserializer=passkit_dot_io_dot_user_dot_user__pb2.AuditLog.FromString,
                _registered_method=True)


class UsersServicer(object):
    """Missing associated documentation comment in .proto file."""

    def createUser(self, request, context):
        """Creates a user and issues a verification email. Required Fields: email, password, name, companyName.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def newUser(self, request, context):
        """Creates a new user and returns a JWT token. Required Fields: email, password, name, companyName.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def verify(self, request, context):
        """Verifies the user with the email verification code. Required Fields: code.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def resendVerificationEmail(self, request, context):
        """Resends the verification email.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getUser(self, request, context):
        """Retrieves the authenticated user's profile.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def login(self, request, context):
        """Authenticates the user and returns a JWT token. Required Fields: username, password.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get2faBarcode(self, request, context):
        """Returns the barcode image URL for 2FA setup.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def resetPassword(self, request, context):
        """Resets the user's password if a reset code is already obtained. Required Fields: username, password, code.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def sendPasswordResetLink(self, request, context):
        """Sends a password reset link to the user's email. Required Fields: username.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def changePassword(self, request, context):
        """Changes the user's password using a reset token. Required Fields: token, password.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def changeEmail(self, request, context):
        """Initiates email change. Verification email is sent to new address. Required Fields: email.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def confirmEmailChange(self, request, context):
        """Confirms and finalizes the email change. Required Fields: email, code.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def updateCompanyName(self, request, context):
        """Updates the company name associated with the account. Required Fields: name.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getProjectsForUserQueryDeprecated(self, request, context):
        """[DEPRECATED] Retrieves user’s projects using pagination. Required Fields: pagination.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getProjectsQueryDeprecated(self, request, context):
        """[DEPRECATED] Retrieves all company projects using pagination. Required Fields: pagination.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getProjectsForUserQuery(self, request, context):
        """Retrieves user’s projects using filters. Required Fields: filters.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getProjectsQuery(self, request, context):
        """Retrieves all company projects using filters. Required Fields: filters.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getProjectByUuid(self, request, context):
        """Retrieves a project by its UUID. Required Fields: id.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getProjectAndTemplateByShortCode(self, request, context):
        """Retrieves a project and template using short code. Required Fields: id.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getProjectsForUser(self, request, context):
        """Retrieves projects belonging to a user by status. Required Fields: status.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getProjects(self, request, context):
        """Retrieves all company projects by status. Required Fields: status.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getScannerConfig(self, request, context):
        """Retrieves the scanner configuration for the user.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def createScannerConfig(self, request, context):
        """Creates a new scanner configuration. Required Fields: ScannerConfiguration fields.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def updateScannerConfig(self, request, context):
        """Updates the existing scanner configuration. Required Fields: ScannerConfiguration fields.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def createAuthorizationResource(self, request, context):
        """Creates a new oauth2 resource, the returned id is NOT the access token used to make requests on the users behalf.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def deleteAuthorizationResource(self, request, context):
        """Deletes an OAuth2 authorization resource. Required Fields: id.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def refreshApiSecret(self, request, context):
        """Refreshes the API secret key for the current user.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def deleteAccount(self, request, context):
        """Permanently deletes the user's account and all associated data. Required Fields: password.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def revokeLegacyCredentials(self, request, context):
        """Immediately revokes any old gRPC credentials.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def createTeamMember(self, request, context):
        """Creates a new sub-user account for the company. Required Fields: email, name, password.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def createPermissionsForTeamMember(self, request, context):
        """Assigns permissions to a new team member. Required Fields: userId, permissions.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def updateTeamMemberPermissions(self, request, context):
        """Updates the entire permissions object for a team member. Required Fields: userId, permissions.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def patchTeamMemberPermissions(self, request, context):
        """Updates partial permissions for a team member. Required Fields: userId, permissions.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getTeamMember(self, request, context):
        """Retrieves a team member by ID. Required Fields: id.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getTeamMembers(self, request, context):
        """Retrieves all team members.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def deleteTeamMember(self, request, context):
        """Deletes a team member. Required Fields: id.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getTeamMemberLogs(self, request, context):
        """Retrieves access logs for a company or user. Required Fields: protocol, classId, userId, dateRange.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_UsersServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'createUser': grpc.unary_unary_rpc_method_handler(
                    servicer.createUser,
                    request_deserializer=passkit_dot_io_dot_user_dot_user__pb2.NewUser.FromString,
                    response_serializer=passkit_dot_io_dot_user_dot_user__pb2.NewUserResponse.SerializeToString,
            ),
            'newUser': grpc.unary_unary_rpc_method_handler(
                    servicer.newUser,
                    request_deserializer=passkit_dot_io_dot_user_dot_user__pb2.NewUser.FromString,
                    response_serializer=passkit_dot_io_dot_user_dot_user__pb2.JWT.SerializeToString,
            ),
            'verify': grpc.unary_unary_rpc_method_handler(
                    servicer.verify,
                    request_deserializer=passkit_dot_io_dot_user_dot_user__pb2.VerifyRequest.FromString,
                    response_serializer=passkit_dot_io_dot_common_dot_common__objects__pb2.Boolean.SerializeToString,
            ),
            'resendVerificationEmail': grpc.unary_unary_rpc_method_handler(
                    servicer.resendVerificationEmail,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=passkit_dot_io_dot_common_dot_common__objects__pb2.Boolean.SerializeToString,
            ),
            'getUser': grpc.unary_unary_rpc_method_handler(
                    servicer.getUser,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=passkit_dot_io_dot_user_dot_user__pb2.GetUserResponse.SerializeToString,
            ),
            'login': grpc.unary_unary_rpc_method_handler(
                    servicer.login,
                    request_deserializer=passkit_dot_io_dot_user_dot_user__pb2.Credentials.FromString,
                    response_serializer=passkit_dot_io_dot_user_dot_user__pb2.JWT.SerializeToString,
            ),
            'get2faBarcode': grpc.unary_unary_rpc_method_handler(
                    servicer.get2faBarcode,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=passkit_dot_io_dot_common_dot_common__objects__pb2.Url.SerializeToString,
            ),
            'resetPassword': grpc.unary_unary_rpc_method_handler(
                    servicer.resetPassword,
                    request_deserializer=passkit_dot_io_dot_user_dot_user__pb2.Credentials.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'sendPasswordResetLink': grpc.unary_unary_rpc_method_handler(
                    servicer.sendPasswordResetLink,
                    request_deserializer=passkit_dot_io_dot_user_dot_user__pb2.Username.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'changePassword': grpc.unary_unary_rpc_method_handler(
                    servicer.changePassword,
                    request_deserializer=passkit_dot_io_dot_user_dot_user__pb2.PasswordResetInput.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'changeEmail': grpc.unary_unary_rpc_method_handler(
                    servicer.changeEmail,
                    request_deserializer=passkit_dot_io_dot_user_dot_user__pb2.Email.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'confirmEmailChange': grpc.unary_unary_rpc_method_handler(
                    servicer.confirmEmailChange,
                    request_deserializer=passkit_dot_io_dot_user_dot_user__pb2.ConfirmEmailChangeInput.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'updateCompanyName': grpc.unary_unary_rpc_method_handler(
                    servicer.updateCompanyName,
                    request_deserializer=passkit_dot_io_dot_user_dot_user__pb2.CompanyName.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'getProjectsForUserQueryDeprecated': grpc.unary_stream_rpc_method_handler(
                    servicer.getProjectsForUserQueryDeprecated,
                    request_deserializer=passkit_dot_io_dot_common_dot_pagination__pb2.Pagination.FromString,
                    response_serializer=passkit_dot_io_dot_common_dot_project__pb2.Project.SerializeToString,
            ),
            'getProjectsQueryDeprecated': grpc.unary_stream_rpc_method_handler(
                    servicer.getProjectsQueryDeprecated,
                    request_deserializer=passkit_dot_io_dot_common_dot_pagination__pb2.Pagination.FromString,
                    response_serializer=passkit_dot_io_dot_common_dot_project__pb2.Project.SerializeToString,
            ),
            'getProjectsForUserQuery': grpc.unary_stream_rpc_method_handler(
                    servicer.getProjectsForUserQuery,
                    request_deserializer=passkit_dot_io_dot_common_dot_filter__pb2.Filters.FromString,
                    response_serializer=passkit_dot_io_dot_common_dot_project__pb2.Project.SerializeToString,
            ),
            'getProjectsQuery': grpc.unary_stream_rpc_method_handler(
                    servicer.getProjectsQuery,
                    request_deserializer=passkit_dot_io_dot_common_dot_filter__pb2.Filters.FromString,
                    response_serializer=passkit_dot_io_dot_common_dot_project__pb2.Project.SerializeToString,
            ),
            'getProjectByUuid': grpc.unary_unary_rpc_method_handler(
                    servicer.getProjectByUuid,
                    request_deserializer=passkit_dot_io_dot_common_dot_common__objects__pb2.Id.FromString,
                    response_serializer=passkit_dot_io_dot_common_dot_project__pb2.Project.SerializeToString,
            ),
            'getProjectAndTemplateByShortCode': grpc.unary_unary_rpc_method_handler(
                    servicer.getProjectAndTemplateByShortCode,
                    request_deserializer=passkit_dot_io_dot_common_dot_common__objects__pb2.Id.FromString,
                    response_serializer=passkit_dot_io_dot_common_dot_project__pb2.ProjectByShortCodeResult.SerializeToString,
            ),
            'getProjectsForUser': grpc.unary_stream_rpc_method_handler(
                    servicer.getProjectsForUser,
                    request_deserializer=passkit_dot_io_dot_common_dot_project__pb2.ProjectStatusFilter.FromString,
                    response_serializer=passkit_dot_io_dot_common_dot_project__pb2.Project.SerializeToString,
            ),
            'getProjects': grpc.unary_stream_rpc_method_handler(
                    servicer.getProjects,
                    request_deserializer=passkit_dot_io_dot_common_dot_project__pb2.ProjectStatusFilter.FromString,
                    response_serializer=passkit_dot_io_dot_common_dot_project__pb2.Project.SerializeToString,
            ),
            'getScannerConfig': grpc.unary_unary_rpc_method_handler(
                    servicer.getScannerConfig,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=passkit_dot_io_dot_user_dot_user__pb2.ScannerConfiguration.SerializeToString,
            ),
            'createScannerConfig': grpc.unary_unary_rpc_method_handler(
                    servicer.createScannerConfig,
                    request_deserializer=passkit_dot_io_dot_user_dot_user__pb2.ScannerConfiguration.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'updateScannerConfig': grpc.unary_unary_rpc_method_handler(
                    servicer.updateScannerConfig,
                    request_deserializer=passkit_dot_io_dot_user_dot_user__pb2.ScannerConfiguration.FromString,
                    response_serializer=passkit_dot_io_dot_user_dot_user__pb2.ScannerConfiguration.SerializeToString,
            ),
            'createAuthorizationResource': grpc.unary_unary_rpc_method_handler(
                    servicer.createAuthorizationResource,
                    request_deserializer=passkit_dot_io_dot_user_dot_user__pb2.OAuth2AuthorizationRequest.FromString,
                    response_serializer=passkit_dot_io_dot_common_dot_common__objects__pb2.Id.SerializeToString,
            ),
            'deleteAuthorizationResource': grpc.unary_unary_rpc_method_handler(
                    servicer.deleteAuthorizationResource,
                    request_deserializer=passkit_dot_io_dot_common_dot_common__objects__pb2.Id.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'refreshApiSecret': grpc.unary_unary_rpc_method_handler(
                    servicer.refreshApiSecret,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'deleteAccount': grpc.unary_unary_rpc_method_handler(
                    servicer.deleteAccount,
                    request_deserializer=passkit_dot_io_dot_user_dot_user__pb2.DeleteAccountRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'revokeLegacyCredentials': grpc.unary_unary_rpc_method_handler(
                    servicer.revokeLegacyCredentials,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'createTeamMember': grpc.unary_unary_rpc_method_handler(
                    servicer.createTeamMember,
                    request_deserializer=passkit_dot_io_dot_user_dot_user__pb2.NewTeamMember.FromString,
                    response_serializer=passkit_dot_io_dot_common_dot_common__objects__pb2.Id.SerializeToString,
            ),
            'createPermissionsForTeamMember': grpc.unary_unary_rpc_method_handler(
                    servicer.createPermissionsForTeamMember,
                    request_deserializer=passkit_dot_io_dot_user_dot_user__pb2.TeamMemberPermissions.FromString,
                    response_serializer=passkit_dot_io_dot_common_dot_common__objects__pb2.Id.SerializeToString,
            ),
            'updateTeamMemberPermissions': grpc.unary_unary_rpc_method_handler(
                    servicer.updateTeamMemberPermissions,
                    request_deserializer=passkit_dot_io_dot_user_dot_user__pb2.TeamMemberPermissions.FromString,
                    response_serializer=passkit_dot_io_dot_user_dot_user__pb2.TeamMemberPermissions.SerializeToString,
            ),
            'patchTeamMemberPermissions': grpc.unary_unary_rpc_method_handler(
                    servicer.patchTeamMemberPermissions,
                    request_deserializer=passkit_dot_io_dot_user_dot_user__pb2.TeamMemberPermissions.FromString,
                    response_serializer=passkit_dot_io_dot_user_dot_user__pb2.TeamMemberPermissions.SerializeToString,
            ),
            'getTeamMember': grpc.unary_unary_rpc_method_handler(
                    servicer.getTeamMember,
                    request_deserializer=passkit_dot_io_dot_common_dot_common__objects__pb2.Id.FromString,
                    response_serializer=passkit_dot_io_dot_user_dot_user__pb2.GetTeamMemberResponse.SerializeToString,
            ),
            'getTeamMembers': grpc.unary_stream_rpc_method_handler(
                    servicer.getTeamMembers,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=passkit_dot_io_dot_user_dot_user__pb2.ListTeamMembersResponse.SerializeToString,
            ),
            'deleteTeamMember': grpc.unary_unary_rpc_method_handler(
                    servicer.deleteTeamMember,
                    request_deserializer=passkit_dot_io_dot_common_dot_common__objects__pb2.Id.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'getTeamMemberLogs': grpc.unary_stream_rpc_method_handler(
                    servicer.getTeamMemberLogs,
                    request_deserializer=passkit_dot_io_dot_user_dot_user__pb2.AuditLogRequest.FromString,
                    response_serializer=passkit_dot_io_dot_user_dot_user__pb2.AuditLog.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'io.Users', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('io.Users', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class Users(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def createUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/io.Users/createUser',
            passkit_dot_io_dot_user_dot_user__pb2.NewUser.SerializeToString,
            passkit_dot_io_dot_user_dot_user__pb2.NewUserResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def newUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/io.Users/newUser',
            passkit_dot_io_dot_user_dot_user__pb2.NewUser.SerializeToString,
            passkit_dot_io_dot_user_dot_user__pb2.JWT.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def verify(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/io.Users/verify',
            passkit_dot_io_dot_user_dot_user__pb2.VerifyRequest.SerializeToString,
            passkit_dot_io_dot_common_dot_common__objects__pb2.Boolean.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def resendVerificationEmail(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/io.Users/resendVerificationEmail',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            passkit_dot_io_dot_common_dot_common__objects__pb2.Boolean.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def getUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/io.Users/getUser',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            passkit_dot_io_dot_user_dot_user__pb2.GetUserResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def login(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/io.Users/login',
            passkit_dot_io_dot_user_dot_user__pb2.Credentials.SerializeToString,
            passkit_dot_io_dot_user_dot_user__pb2.JWT.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def get2faBarcode(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/io.Users/get2faBarcode',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            passkit_dot_io_dot_common_dot_common__objects__pb2.Url.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def resetPassword(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/io.Users/resetPassword',
            passkit_dot_io_dot_user_dot_user__pb2.Credentials.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def sendPasswordResetLink(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/io.Users/sendPasswordResetLink',
            passkit_dot_io_dot_user_dot_user__pb2.Username.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def changePassword(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/io.Users/changePassword',
            passkit_dot_io_dot_user_dot_user__pb2.PasswordResetInput.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def changeEmail(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/io.Users/changeEmail',
            passkit_dot_io_dot_user_dot_user__pb2.Email.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def confirmEmailChange(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/io.Users/confirmEmailChange',
            passkit_dot_io_dot_user_dot_user__pb2.ConfirmEmailChangeInput.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def updateCompanyName(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/io.Users/updateCompanyName',
            passkit_dot_io_dot_user_dot_user__pb2.CompanyName.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def getProjectsForUserQueryDeprecated(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/io.Users/getProjectsForUserQueryDeprecated',
            passkit_dot_io_dot_common_dot_pagination__pb2.Pagination.SerializeToString,
            passkit_dot_io_dot_common_dot_project__pb2.Project.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def getProjectsQueryDeprecated(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/io.Users/getProjectsQueryDeprecated',
            passkit_dot_io_dot_common_dot_pagination__pb2.Pagination.SerializeToString,
            passkit_dot_io_dot_common_dot_project__pb2.Project.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def getProjectsForUserQuery(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/io.Users/getProjectsForUserQuery',
            passkit_dot_io_dot_common_dot_filter__pb2.Filters.SerializeToString,
            passkit_dot_io_dot_common_dot_project__pb2.Project.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def getProjectsQuery(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/io.Users/getProjectsQuery',
            passkit_dot_io_dot_common_dot_filter__pb2.Filters.SerializeToString,
            passkit_dot_io_dot_common_dot_project__pb2.Project.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def getProjectByUuid(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/io.Users/getProjectByUuid',
            passkit_dot_io_dot_common_dot_common__objects__pb2.Id.SerializeToString,
            passkit_dot_io_dot_common_dot_project__pb2.Project.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def getProjectAndTemplateByShortCode(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/io.Users/getProjectAndTemplateByShortCode',
            passkit_dot_io_dot_common_dot_common__objects__pb2.Id.SerializeToString,
            passkit_dot_io_dot_common_dot_project__pb2.ProjectByShortCodeResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def getProjectsForUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/io.Users/getProjectsForUser',
            passkit_dot_io_dot_common_dot_project__pb2.ProjectStatusFilter.SerializeToString,
            passkit_dot_io_dot_common_dot_project__pb2.Project.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def getProjects(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/io.Users/getProjects',
            passkit_dot_io_dot_common_dot_project__pb2.ProjectStatusFilter.SerializeToString,
            passkit_dot_io_dot_common_dot_project__pb2.Project.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def getScannerConfig(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/io.Users/getScannerConfig',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            passkit_dot_io_dot_user_dot_user__pb2.ScannerConfiguration.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def createScannerConfig(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/io.Users/createScannerConfig',
            passkit_dot_io_dot_user_dot_user__pb2.ScannerConfiguration.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def updateScannerConfig(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/io.Users/updateScannerConfig',
            passkit_dot_io_dot_user_dot_user__pb2.ScannerConfiguration.SerializeToString,
            passkit_dot_io_dot_user_dot_user__pb2.ScannerConfiguration.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def createAuthorizationResource(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/io.Users/createAuthorizationResource',
            passkit_dot_io_dot_user_dot_user__pb2.OAuth2AuthorizationRequest.SerializeToString,
            passkit_dot_io_dot_common_dot_common__objects__pb2.Id.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def deleteAuthorizationResource(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/io.Users/deleteAuthorizationResource',
            passkit_dot_io_dot_common_dot_common__objects__pb2.Id.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def refreshApiSecret(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/io.Users/refreshApiSecret',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def deleteAccount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/io.Users/deleteAccount',
            passkit_dot_io_dot_user_dot_user__pb2.DeleteAccountRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def revokeLegacyCredentials(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/io.Users/revokeLegacyCredentials',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def createTeamMember(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/io.Users/createTeamMember',
            passkit_dot_io_dot_user_dot_user__pb2.NewTeamMember.SerializeToString,
            passkit_dot_io_dot_common_dot_common__objects__pb2.Id.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def createPermissionsForTeamMember(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/io.Users/createPermissionsForTeamMember',
            passkit_dot_io_dot_user_dot_user__pb2.TeamMemberPermissions.SerializeToString,
            passkit_dot_io_dot_common_dot_common__objects__pb2.Id.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def updateTeamMemberPermissions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/io.Users/updateTeamMemberPermissions',
            passkit_dot_io_dot_user_dot_user__pb2.TeamMemberPermissions.SerializeToString,
            passkit_dot_io_dot_user_dot_user__pb2.TeamMemberPermissions.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def patchTeamMemberPermissions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/io.Users/patchTeamMemberPermissions',
            passkit_dot_io_dot_user_dot_user__pb2.TeamMemberPermissions.SerializeToString,
            passkit_dot_io_dot_user_dot_user__pb2.TeamMemberPermissions.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def getTeamMember(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/io.Users/getTeamMember',
            passkit_dot_io_dot_common_dot_common__objects__pb2.Id.SerializeToString,
            passkit_dot_io_dot_user_dot_user__pb2.GetTeamMemberResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def getTeamMembers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/io.Users/getTeamMembers',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            passkit_dot_io_dot_user_dot_user__pb2.ListTeamMembersResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def deleteTeamMember(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/io.Users/deleteTeamMember',
            passkit_dot_io_dot_common_dot_common__objects__pb2.Id.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def getTeamMemberLogs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/io.Users/getTeamMemberLogs',
            passkit_dot_io_dot_user_dot_user__pb2.AuditLogRequest.SerializeToString,
            passkit_dot_io_dot_user_dot_user__pb2.AuditLog.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)


class IntegrationsStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.createIntegrations = channel.unary_unary(
                '/io.Integrations/createIntegrations',
                request_serializer=passkit_dot_io_dot_common_dot_integration__pb2.IntegrationConfigs.SerializeToString,
                response_deserializer=passkit_dot_io_dot_common_dot_common__objects__pb2.Id.FromString,
                _registered_method=True)
        self.getIntegrations = channel.unary_unary(
                '/io.Integrations/getIntegrations',
                request_serializer=passkit_dot_io_dot_common_dot_integration__pb2.ProtocolIdInput.SerializeToString,
                response_deserializer=passkit_dot_io_dot_common_dot_integration__pb2.IntegrationConfigs.FromString,
                _registered_method=True)
        self.updateIntegrations = channel.unary_unary(
                '/io.Integrations/updateIntegrations',
                request_serializer=passkit_dot_io_dot_common_dot_integration__pb2.IntegrationConfigs.SerializeToString,
                response_deserializer=passkit_dot_io_dot_common_dot_common__objects__pb2.Id.FromString,
                _registered_method=True)
        self.deleteIntegrations = channel.unary_unary(
                '/io.Integrations/deleteIntegrations',
                request_serializer=passkit_dot_io_dot_common_dot_integration__pb2.ProtocolIdInput.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.createSinkSubscription = channel.unary_unary(
                '/io.Integrations/createSinkSubscription',
                request_serializer=passkit_dot_io_dot_common_dot_integration__pb2.SinkSubscription.SerializeToString,
                response_deserializer=passkit_dot_io_dot_common_dot_common__objects__pb2.Id.FromString,
                _registered_method=True)
        self.getSinkSubscription = channel.unary_unary(
                '/io.Integrations/getSinkSubscription',
                request_serializer=passkit_dot_io_dot_common_dot_integration__pb2.SubscriptionRequest.SerializeToString,
                response_deserializer=passkit_dot_io_dot_common_dot_integration__pb2.SinkSubscription.FromString,
                _registered_method=True)
        self.listSinkSubscriptionsDeprecated = channel.unary_stream(
                '/io.Integrations/listSinkSubscriptionsDeprecated',
                request_serializer=passkit_dot_io_dot_common_dot_common__objects__pb2.ListRequestDeprecated.SerializeToString,
                response_deserializer=passkit_dot_io_dot_common_dot_integration__pb2.SinkSubscription.FromString,
                _registered_method=True)
        self.listSinkSubscriptions = channel.unary_stream(
                '/io.Integrations/listSinkSubscriptions',
                request_serializer=passkit_dot_io_dot_common_dot_common__objects__pb2.ListRequest.SerializeToString,
                response_deserializer=passkit_dot_io_dot_common_dot_integration__pb2.SinkSubscription.FromString,
                _registered_method=True)
        self.updateSinkSubscription = channel.unary_unary(
                '/io.Integrations/updateSinkSubscription',
                request_serializer=passkit_dot_io_dot_common_dot_integration__pb2.SinkSubscription.SerializeToString,
                response_deserializer=passkit_dot_io_dot_common_dot_common__objects__pb2.Id.FromString,
                _registered_method=True)
        self.deleteSinkSubscription = channel.unary_unary(
                '/io.Integrations/deleteSinkSubscription',
                request_serializer=passkit_dot_io_dot_common_dot_integration__pb2.SubscriptionRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.getSampleSubscriptionEvent = channel.unary_unary(
                '/io.Integrations/getSampleSubscriptionEvent',
                request_serializer=passkit_dot_io_dot_common_dot_common__objects__pb2.Id.SerializeToString,
                response_deserializer=passkit_dot_io_dot_common_dot_integration__pb2.SinkSubscription.FromString,
                _registered_method=True)
        self.callDynamicApi = channel.unary_unary(
                '/io.Integrations/callDynamicApi',
                request_serializer=passkit_dot_io_dot_common_dot_integration__pb2.DynamicApiInput.SerializeToString,
                response_deserializer=passkit_dot_io_dot_common_dot_integration__pb2.DynamicApiResponse.FromString,
                _registered_method=True)


class IntegrationsServicer(object):
    """Missing associated documentation comment in .proto file."""

    def createIntegrations(self, request, context):
        """Creates integration configurations for a pass type. Required Fields: protocol, classId, integrations.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getIntegrations(self, request, context):
        """Retrieves integration configurations for a protocol and class. Required Fields: protocol, classId.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def updateIntegrations(self, request, context):
        """Updates integration configurations for a pass type. Required Fields: protocol, classId, integrations.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def deleteIntegrations(self, request, context):
        """Deletes integration configurations for a protocol and class. Required Fields: protocol, classId.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def createSinkSubscription(self, request, context):
        """Creates a sink subscription to receive webhook callbacks after specific events. Required Fields: protocol, classId, event, url.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getSinkSubscription(self, request, context):
        """Retrieves a sink subscription configuration. Required Fields: protocol, subscriptionId.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def listSinkSubscriptionsDeprecated(self, request, context):
        """[DEPRECATED] Lists sink subscriptions by segment with optional pagination. Required Fields: pagination.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def listSinkSubscriptions(self, request, context):
        """Lists all sink subscriptions by segment with optional pagination. Required Fields: filters.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def updateSinkSubscription(self, request, context):
        """Updates a sink subscription configuration. Required Fields: protocol, classId, event, url.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def deleteSinkSubscription(self, request, context):
        """Deletes a sink subscription configuration. Required Fields: protocol, subscriptionId.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getSampleSubscriptionEvent(self, request, context):
        """Returns a sample sink subscription payload. Required Fields: id.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def callDynamicApi(self, request, context):
        """Dynamically calls an external API using configured credentials. Required Fields: url, method, headers, body (depending on the API).
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_IntegrationsServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'createIntegrations': grpc.unary_unary_rpc_method_handler(
                    servicer.createIntegrations,
                    request_deserializer=passkit_dot_io_dot_common_dot_integration__pb2.IntegrationConfigs.FromString,
                    response_serializer=passkit_dot_io_dot_common_dot_common__objects__pb2.Id.SerializeToString,
            ),
            'getIntegrations': grpc.unary_unary_rpc_method_handler(
                    servicer.getIntegrations,
                    request_deserializer=passkit_dot_io_dot_common_dot_integration__pb2.ProtocolIdInput.FromString,
                    response_serializer=passkit_dot_io_dot_common_dot_integration__pb2.IntegrationConfigs.SerializeToString,
            ),
            'updateIntegrations': grpc.unary_unary_rpc_method_handler(
                    servicer.updateIntegrations,
                    request_deserializer=passkit_dot_io_dot_common_dot_integration__pb2.IntegrationConfigs.FromString,
                    response_serializer=passkit_dot_io_dot_common_dot_common__objects__pb2.Id.SerializeToString,
            ),
            'deleteIntegrations': grpc.unary_unary_rpc_method_handler(
                    servicer.deleteIntegrations,
                    request_deserializer=passkit_dot_io_dot_common_dot_integration__pb2.ProtocolIdInput.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'createSinkSubscription': grpc.unary_unary_rpc_method_handler(
                    servicer.createSinkSubscription,
                    request_deserializer=passkit_dot_io_dot_common_dot_integration__pb2.SinkSubscription.FromString,
                    response_serializer=passkit_dot_io_dot_common_dot_common__objects__pb2.Id.SerializeToString,
            ),
            'getSinkSubscription': grpc.unary_unary_rpc_method_handler(
                    servicer.getSinkSubscription,
                    request_deserializer=passkit_dot_io_dot_common_dot_integration__pb2.SubscriptionRequest.FromString,
                    response_serializer=passkit_dot_io_dot_common_dot_integration__pb2.SinkSubscription.SerializeToString,
            ),
            'listSinkSubscriptionsDeprecated': grpc.unary_stream_rpc_method_handler(
                    servicer.listSinkSubscriptionsDeprecated,
                    request_deserializer=passkit_dot_io_dot_common_dot_common__objects__pb2.ListRequestDeprecated.FromString,
                    response_serializer=passkit_dot_io_dot_common_dot_integration__pb2.SinkSubscription.SerializeToString,
            ),
            'listSinkSubscriptions': grpc.unary_stream_rpc_method_handler(
                    servicer.listSinkSubscriptions,
                    request_deserializer=passkit_dot_io_dot_common_dot_common__objects__pb2.ListRequest.FromString,
                    response_serializer=passkit_dot_io_dot_common_dot_integration__pb2.SinkSubscription.SerializeToString,
            ),
            'updateSinkSubscription': grpc.unary_unary_rpc_method_handler(
                    servicer.updateSinkSubscription,
                    request_deserializer=passkit_dot_io_dot_common_dot_integration__pb2.SinkSubscription.FromString,
                    response_serializer=passkit_dot_io_dot_common_dot_common__objects__pb2.Id.SerializeToString,
            ),
            'deleteSinkSubscription': grpc.unary_unary_rpc_method_handler(
                    servicer.deleteSinkSubscription,
                    request_deserializer=passkit_dot_io_dot_common_dot_integration__pb2.SubscriptionRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'getSampleSubscriptionEvent': grpc.unary_unary_rpc_method_handler(
                    servicer.getSampleSubscriptionEvent,
                    request_deserializer=passkit_dot_io_dot_common_dot_common__objects__pb2.Id.FromString,
                    response_serializer=passkit_dot_io_dot_common_dot_integration__pb2.SinkSubscription.SerializeToString,
            ),
            'callDynamicApi': grpc.unary_unary_rpc_method_handler(
                    servicer.callDynamicApi,
                    request_deserializer=passkit_dot_io_dot_common_dot_integration__pb2.DynamicApiInput.FromString,
                    response_serializer=passkit_dot_io_dot_common_dot_integration__pb2.DynamicApiResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'io.Integrations', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('io.Integrations', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class Integrations(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def createIntegrations(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/io.Integrations/createIntegrations',
            passkit_dot_io_dot_common_dot_integration__pb2.IntegrationConfigs.SerializeToString,
            passkit_dot_io_dot_common_dot_common__objects__pb2.Id.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def getIntegrations(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/io.Integrations/getIntegrations',
            passkit_dot_io_dot_common_dot_integration__pb2.ProtocolIdInput.SerializeToString,
            passkit_dot_io_dot_common_dot_integration__pb2.IntegrationConfigs.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def updateIntegrations(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/io.Integrations/updateIntegrations',
            passkit_dot_io_dot_common_dot_integration__pb2.IntegrationConfigs.SerializeToString,
            passkit_dot_io_dot_common_dot_common__objects__pb2.Id.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def deleteIntegrations(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/io.Integrations/deleteIntegrations',
            passkit_dot_io_dot_common_dot_integration__pb2.ProtocolIdInput.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def createSinkSubscription(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/io.Integrations/createSinkSubscription',
            passkit_dot_io_dot_common_dot_integration__pb2.SinkSubscription.SerializeToString,
            passkit_dot_io_dot_common_dot_common__objects__pb2.Id.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def getSinkSubscription(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/io.Integrations/getSinkSubscription',
            passkit_dot_io_dot_common_dot_integration__pb2.SubscriptionRequest.SerializeToString,
            passkit_dot_io_dot_common_dot_integration__pb2.SinkSubscription.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def listSinkSubscriptionsDeprecated(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/io.Integrations/listSinkSubscriptionsDeprecated',
            passkit_dot_io_dot_common_dot_common__objects__pb2.ListRequestDeprecated.SerializeToString,
            passkit_dot_io_dot_common_dot_integration__pb2.SinkSubscription.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def listSinkSubscriptions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/io.Integrations/listSinkSubscriptions',
            passkit_dot_io_dot_common_dot_common__objects__pb2.ListRequest.SerializeToString,
            passkit_dot_io_dot_common_dot_integration__pb2.SinkSubscription.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def updateSinkSubscription(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/io.Integrations/updateSinkSubscription',
            passkit_dot_io_dot_common_dot_integration__pb2.SinkSubscription.SerializeToString,
            passkit_dot_io_dot_common_dot_common__objects__pb2.Id.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def deleteSinkSubscription(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/io.Integrations/deleteSinkSubscription',
            passkit_dot_io_dot_common_dot_integration__pb2.SubscriptionRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def getSampleSubscriptionEvent(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/io.Integrations/getSampleSubscriptionEvent',
            passkit_dot_io_dot_common_dot_common__objects__pb2.Id.SerializeToString,
            passkit_dot_io_dot_common_dot_integration__pb2.SinkSubscription.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def callDynamicApi(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/io.Integrations/callDynamicApi',
            passkit_dot_io_dot_common_dot_integration__pb2.DynamicApiInput.SerializeToString,
            passkit_dot_io_dot_common_dot_integration__pb2.DynamicApiResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
