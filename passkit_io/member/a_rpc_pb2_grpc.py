# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from passkit.io.common import common_objects_pb2 as passkit_dot_io_dot_common_dot_common__objects__pb2
from passkit.io.common import distribution_pb2 as passkit_dot_io_dot_common_dot_distribution__pb2
from passkit.io.common import filter_pb2 as passkit_dot_io_dot_common_dot_filter__pb2
from passkit.io.common import message_pb2 as passkit_dot_io_dot_common_dot_message__pb2
from passkit.io.common import pagination_pb2 as passkit_dot_io_dot_common_dot_pagination__pb2
from passkit.io.common import personal_pb2 as passkit_dot_io_dot_common_dot_personal__pb2
from passkit.io.member import member_events_pb2 as passkit_dot_io_dot_member_dot_member__events__pb2
from passkit.io.member import member_pb2 as passkit_dot_io_dot_member_dot_member__pb2
from passkit.io.member import program_pb2 as passkit_dot_io_dot_member_dot_program__pb2
from passkit.io.member import tier_pb2 as passkit_dot_io_dot_member_dot_tier__pb2


class MembersStub(object):
    """The PassKit Members API provides a powerful and flexible way to manage your membership programs, including creating, updating, and maintaining digital membership passes for Apple Wallet and Google Wallet. Easily integrate membership functionality into your applications to deliver seamless, real-time experiences for your members.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.createProgram = channel.unary_unary(
                '/members.Members/createProgram',
                request_serializer=passkit_dot_io_dot_member_dot_program__pb2.Program.SerializeToString,
                response_deserializer=passkit_dot_io_dot_common_dot_common__objects__pb2.Id.FromString,
                _registered_method=True)
        self.updateProgram = channel.unary_unary(
                '/members.Members/updateProgram',
                request_serializer=passkit_dot_io_dot_member_dot_program__pb2.Program.SerializeToString,
                response_deserializer=passkit_dot_io_dot_member_dot_program__pb2.Program.FromString,
                _registered_method=True)
        self.getProgram = channel.unary_unary(
                '/members.Members/getProgram',
                request_serializer=passkit_dot_io_dot_common_dot_common__objects__pb2.Id.SerializeToString,
                response_deserializer=passkit_dot_io_dot_member_dot_program__pb2.Program.FromString,
                _registered_method=True)
        self.copyProgram = channel.unary_unary(
                '/members.Members/copyProgram',
                request_serializer=passkit_dot_io_dot_member_dot_program__pb2.ProgramCopyRequest.SerializeToString,
                response_deserializer=passkit_dot_io_dot_common_dot_common__objects__pb2.Id.FromString,
                _registered_method=True)
        self.deleteProgram = channel.unary_unary(
                '/members.Members/deleteProgram',
                request_serializer=passkit_dot_io_dot_common_dot_common__objects__pb2.Id.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.listProgramsDeprecated = channel.unary_stream(
                '/members.Members/listProgramsDeprecated',
                request_serializer=passkit_dot_io_dot_common_dot_pagination__pb2.Pagination.SerializeToString,
                response_deserializer=passkit_dot_io_dot_member_dot_program__pb2.Program.FromString,
                _registered_method=True)
        self.listPrograms = channel.unary_stream(
                '/members.Members/listPrograms',
                request_serializer=passkit_dot_io_dot_common_dot_filter__pb2.Filters.SerializeToString,
                response_deserializer=passkit_dot_io_dot_member_dot_program__pb2.Program.FromString,
                _registered_method=True)
        self.createTier = channel.unary_unary(
                '/members.Members/createTier',
                request_serializer=passkit_dot_io_dot_member_dot_tier__pb2.Tier.SerializeToString,
                response_deserializer=passkit_dot_io_dot_common_dot_common__objects__pb2.Id.FromString,
                _registered_method=True)
        self.updateTier = channel.unary_unary(
                '/members.Members/updateTier',
                request_serializer=passkit_dot_io_dot_member_dot_tier__pb2.Tier.SerializeToString,
                response_deserializer=passkit_dot_io_dot_member_dot_tier__pb2.Tier.FromString,
                _registered_method=True)
        self.getTier = channel.unary_unary(
                '/members.Members/getTier',
                request_serializer=passkit_dot_io_dot_member_dot_tier__pb2.TierRequestInput.SerializeToString,
                response_deserializer=passkit_dot_io_dot_member_dot_tier__pb2.Tier.FromString,
                _registered_method=True)
        self.deleteTier = channel.unary_unary(
                '/members.Members/deleteTier',
                request_serializer=passkit_dot_io_dot_member_dot_tier__pb2.TierRequestInput.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.listTiersDeprecated = channel.unary_stream(
                '/members.Members/listTiersDeprecated',
                request_serializer=passkit_dot_io_dot_member_dot_member__pb2.ListRequestDeprecated.SerializeToString,
                response_deserializer=passkit_dot_io_dot_member_dot_tier__pb2.Tier.FromString,
                _registered_method=True)
        self.listTiers = channel.unary_stream(
                '/members.Members/listTiers',
                request_serializer=passkit_dot_io_dot_member_dot_member__pb2.ListRequest.SerializeToString,
                response_deserializer=passkit_dot_io_dot_member_dot_tier__pb2.Tier.FromString,
                _registered_method=True)
        self.enrolMember = channel.unary_unary(
                '/members.Members/enrolMember',
                request_serializer=passkit_dot_io_dot_member_dot_member__pb2.Member.SerializeToString,
                response_deserializer=passkit_dot_io_dot_common_dot_common__objects__pb2.Id.FromString,
                _registered_method=True)
        self.enrolMemberPublic = channel.unary_unary(
                '/members.Members/enrolMemberPublic',
                request_serializer=passkit_dot_io_dot_member_dot_member__pb2.Member.SerializeToString,
                response_deserializer=passkit_dot_io_dot_common_dot_common__objects__pb2.Id.FromString,
                _registered_method=True)
        self.getMemberRecordById = channel.unary_unary(
                '/members.Members/getMemberRecordById',
                request_serializer=passkit_dot_io_dot_common_dot_common__objects__pb2.Id.SerializeToString,
                response_deserializer=passkit_dot_io_dot_member_dot_member__pb2.Member.FromString,
                _registered_method=True)
        self.getMemberRecordByExternalId = channel.unary_unary(
                '/members.Members/getMemberRecordByExternalId',
                request_serializer=passkit_dot_io_dot_member_dot_member__pb2.MemberRecordByExternalIdRequest.SerializeToString,
                response_deserializer=passkit_dot_io_dot_member_dot_member__pb2.Member.FromString,
                _registered_method=True)
        self.checkInMember = channel.unary_unary(
                '/members.Members/checkInMember',
                request_serializer=passkit_dot_io_dot_member_dot_member__pb2.MemberCheckInOutRequest.SerializeToString,
                response_deserializer=passkit_dot_io_dot_member_dot_member__events__pb2.MemberEvent.FromString,
                _registered_method=True)
        self.checkOutMember = channel.unary_unary(
                '/members.Members/checkOutMember',
                request_serializer=passkit_dot_io_dot_member_dot_member__pb2.MemberCheckInOutRequest.SerializeToString,
                response_deserializer=passkit_dot_io_dot_member_dot_member__events__pb2.MemberEvent.FromString,
                _registered_method=True)
        self.listMembersDeprecated = channel.unary_stream(
                '/members.Members/listMembersDeprecated',
                request_serializer=passkit_dot_io_dot_member_dot_member__pb2.ListRequestDeprecated.SerializeToString,
                response_deserializer=passkit_dot_io_dot_member_dot_member__pb2.Member.FromString,
                _registered_method=True)
        self.listMembers = channel.unary_stream(
                '/members.Members/listMembers',
                request_serializer=passkit_dot_io_dot_member_dot_member__pb2.ListRequest.SerializeToString,
                response_deserializer=passkit_dot_io_dot_member_dot_member__pb2.Member.FromString,
                _registered_method=True)
        self.updateMember = channel.unary_unary(
                '/members.Members/updateMember',
                request_serializer=passkit_dot_io_dot_member_dot_member__pb2.Member.SerializeToString,
                response_deserializer=passkit_dot_io_dot_common_dot_common__objects__pb2.Id.FromString,
                _registered_method=True)
        self.earnPoints = channel.unary_unary(
                '/members.Members/earnPoints',
                request_serializer=passkit_dot_io_dot_member_dot_member__pb2.EarnBurnPointsRequest.SerializeToString,
                response_deserializer=passkit_dot_io_dot_member_dot_member__pb2.MemberPoints.FromString,
                _registered_method=True)
        self.burnPoints = channel.unary_unary(
                '/members.Members/burnPoints',
                request_serializer=passkit_dot_io_dot_member_dot_member__pb2.EarnBurnPointsRequest.SerializeToString,
                response_deserializer=passkit_dot_io_dot_member_dot_member__pb2.MemberPoints.FromString,
                _registered_method=True)
        self.setPoints = channel.unary_unary(
                '/members.Members/setPoints',
                request_serializer=passkit_dot_io_dot_member_dot_member__pb2.SetPointsRequest.SerializeToString,
                response_deserializer=passkit_dot_io_dot_member_dot_member__pb2.MemberPoints.FromString,
                _registered_method=True)
        self.changeMemberTier = channel.unary_unary(
                '/members.Members/changeMemberTier',
                request_serializer=passkit_dot_io_dot_member_dot_member__pb2.ChangeTierRequest.SerializeToString,
                response_deserializer=passkit_dot_io_dot_member_dot_member__events__pb2.MemberEvent.FromString,
                _registered_method=True)
        self.updateMembersBySegment = channel.unary_unary(
                '/members.Members/updateMembersBySegment',
                request_serializer=passkit_dot_io_dot_member_dot_member__pb2.MemberSegmentRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.deleteMembersBySegment = channel.unary_unary(
                '/members.Members/deleteMembersBySegment',
                request_serializer=passkit_dot_io_dot_member_dot_member__pb2.MemberSegmentRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.deleteMember = channel.unary_unary(
                '/members.Members/deleteMember',
                request_serializer=passkit_dot_io_dot_member_dot_member__pb2.Member.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.bulkDeleteMembers = channel.unary_unary(
                '/members.Members/bulkDeleteMembers',
                request_serializer=passkit_dot_io_dot_common_dot_common__objects__pb2.BulkPassActionRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.countMembersDeprecated = channel.unary_unary(
                '/members.Members/countMembersDeprecated',
                request_serializer=passkit_dot_io_dot_member_dot_member__pb2.ListRequestDeprecated.SerializeToString,
                response_deserializer=passkit_dot_io_dot_common_dot_common__objects__pb2.Count.FromString,
                _registered_method=True)
        self.countMembers = channel.unary_unary(
                '/members.Members/countMembers',
                request_serializer=passkit_dot_io_dot_member_dot_member__pb2.ListRequest.SerializeToString,
                response_deserializer=passkit_dot_io_dot_common_dot_common__objects__pb2.Count.FromString,
                _registered_method=True)
        self.getMessageHistoryForMember = channel.unary_stream(
                '/members.Members/getMessageHistoryForMember',
                request_serializer=passkit_dot_io_dot_common_dot_pagination__pb2.Pagination.SerializeToString,
                response_deserializer=passkit_dot_io_dot_common_dot_message__pb2.Message.FromString,
                _registered_method=True)
        self.getMetaKeysForProgram = channel.unary_unary(
                '/members.Members/getMetaKeysForProgram',
                request_serializer=passkit_dot_io_dot_common_dot_common__objects__pb2.Id.SerializeToString,
                response_deserializer=passkit_dot_io_dot_common_dot_common__objects__pb2.Strings.FromString,
                _registered_method=True)
        self.renewMembersExpiry = channel.unary_unary(
                '/members.Members/renewMembersExpiry',
                request_serializer=passkit_dot_io_dot_member_dot_member__pb2.UpdateExpiryRequest.SerializeToString,
                response_deserializer=passkit_dot_io_dot_common_dot_common__objects__pb2.Count.FromString,
                _registered_method=True)
        self.updateMemberExpiry = channel.unary_unary(
                '/members.Members/updateMemberExpiry',
                request_serializer=passkit_dot_io_dot_member_dot_member__pb2.MemberExpiry.SerializeToString,
                response_deserializer=passkit_dot_io_dot_common_dot_common__objects__pb2.Id.FromString,
                _registered_method=True)
        self.patchPerson = channel.unary_unary(
                '/members.Members/patchPerson',
                request_serializer=passkit_dot_io_dot_common_dot_personal__pb2.PersonRequest.SerializeToString,
                response_deserializer=passkit_dot_io_dot_common_dot_common__objects__pb2.Id.FromString,
                _registered_method=True)
        self.countMemberEvents = channel.unary_unary(
                '/members.Members/countMemberEvents',
                request_serializer=passkit_dot_io_dot_member_dot_member__pb2.ListRequest.SerializeToString,
                response_deserializer=passkit_dot_io_dot_common_dot_common__objects__pb2.Count.FromString,
                _registered_method=True)
        self.listMemberEvents = channel.unary_stream(
                '/members.Members/listMemberEvents',
                request_serializer=passkit_dot_io_dot_member_dot_member__pb2.ListRequest.SerializeToString,
                response_deserializer=passkit_dot_io_dot_member_dot_member__events__pb2.MemberEvent.FromString,
                _registered_method=True)
        self.getMemberEventMetaKeysForProgram = channel.unary_unary(
                '/members.Members/getMemberEventMetaKeysForProgram',
                request_serializer=passkit_dot_io_dot_common_dot_common__objects__pb2.Id.SerializeToString,
                response_deserializer=passkit_dot_io_dot_common_dot_common__objects__pb2.Strings.FromString,
                _registered_method=True)
        self.listEventsForMember = channel.unary_stream(
                '/members.Members/listEventsForMember',
                request_serializer=passkit_dot_io_dot_common_dot_common__objects__pb2.Id.SerializeToString,
                response_deserializer=passkit_dot_io_dot_member_dot_member__events__pb2.MemberEvent.FromString,
                _registered_method=True)
        self.deleteMemberEvents = channel.unary_unary(
                '/members.Members/deleteMemberEvents',
                request_serializer=passkit_dot_io_dot_member_dot_member__pb2.ListRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.deleteEventsForMember = channel.unary_unary(
                '/members.Members/deleteEventsForMember',
                request_serializer=passkit_dot_io_dot_common_dot_common__objects__pb2.Id.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.deleteMemberEvent = channel.unary_unary(
                '/members.Members/deleteMemberEvent',
                request_serializer=passkit_dot_io_dot_common_dot_common__objects__pb2.Id.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.getProgramEnrolment = channel.unary_unary(
                '/members.Members/getProgramEnrolment',
                request_serializer=passkit_dot_io_dot_common_dot_common__objects__pb2.Id.SerializeToString,
                response_deserializer=passkit_dot_io_dot_common_dot_distribution__pb2.EnrolmentUrls.FromString,
                _registered_method=True)


class MembersServicer(object):
    """The PassKit Members API provides a powerful and flexible way to manage your membership programs, including creating, updating, and maintaining digital membership passes for Apple Wallet and Google Wallet. Easily integrate membership functionality into your applications to deliver seamless, real-time experiences for your members.
    """

    def createProgram(self, request, context):
        """Creates a new membership program with details about enrollment, renewal, and cancellation. Optionally configure GPS locations and Beacons to trigger lock-screen notifications. Required fields: program name.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def updateProgram(self, request, context):
        """Updates an existing membership program with new details or settings. Required fields: program id.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getProgram(self, request, context):
        """Retrieves a membership program by its unique id. Required fields: program id.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def copyProgram(self, request, context):
        """Creates a new program by copying the configuration and design of an existing program. Required fields: source program id.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def deleteProgram(self, request, context):
        """Permanently deletes a membership program and its associated data, including all passes. Required fields: program id. Use with caution, as this action is irreversible.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def listProgramsDeprecated(self, request, context):
        """Lists all membership programs associated with your project. Supports filtering and pagination. This version uses the legacy request format and is maintained for backward compatibility. New integrations should use the updated listPrograms call instead.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def listPrograms(self, request, context):
        """Lists all membership programs associated with your project. Supports filtering options to narrow down the results based on specific criteria.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def createTier(self, request, context):
        """Creates a new membership tier within a program, specifying criteria, benefits, and settings. Required fields: program id, tier name.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def updateTier(self, request, context):
        """Updates an existing membership tier’s details such as benefits, qualifications, and rules. Required fields: tier id.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getTier(self, request, context):
        """Retrieves details of a specific membership tier by its id. Required fields: tier id.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def deleteTier(self, request, context):
        """Deletes a membership tier from a program. Required fields: tier id.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def listTiersDeprecated(self, request, context):
        """Retrieves a list of all membership tiers within a membership program. Required fields: program id. This version uses the legacy request format and is maintained for backward compatibility. New integrations should use listTiers.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def listTiers(self, request, context):
        """Retrieves a list of all membership tiers within a membership program. Required fields: program id. Supports filtering options to narrow down the results based on specific criteria.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def enrolMember(self, request, context):
        """Enrols a new member into a program and generates a pass. Required fields: program id and member data.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def enrolMemberPublic(self, request, context):
        """Public endpoint to enrol a new member into a program without authentication. Required fields: program id and member data.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getMemberRecordById(self, request, context):
        """Retrieves a member record using the PassKit id. Required fields: member id.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getMemberRecordByExternalId(self, request, context):
        """Retrieves a member record using the member's external id. Required fields: program id and external id.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def checkInMember(self, request, context):
        """Checks in a member in by PassKit Id or External Id. Required fields: member id or program id and external id.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def checkOutMember(self, request, context):
        """Checks out a member in by PassKit Id or External Id. Required fields: member id or program id and external id.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def listMembersDeprecated(self, request, context):
        """Retrieves a list of all members within a membership program. Required fields: program id. This version uses the legacy request format and is maintained for backward compatibility. New integrations should use listMembers as OR operator is not supported.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def listMembers(self, request, context):
        """Retrieves a list of all members within a membership program. Required fields: program id. Supports filtering options to narrow down the results based on specific criteria.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def updateMember(self, request, context):
        """Updates an existing member’s personal details or status using PassKit Id or External Id. Required fields: member id or program id and external id. If updating personal information only use patchPerson.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def earnPoints(self, request, context):
        """Adds (earns) loyalty points to a member's account using PassKit Id or External Id. Required fields: member id, or program id and external id, and number of points to earn.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def burnPoints(self, request, context):
        """Removes (burns) loyalty points to a member's account using PassKit Id or External Id. Required fields: member id, or program id and external id, and number of points to burn.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def setPoints(self, request, context):
        """Sets loyalty points balance to a specific value for a member using PassKit Id or External Id. Required fields: member id, or program id and external id, and new points balance.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def changeMemberTier(self, request, context):
        """Changes a member’s tier within a program using PassKit Id or External Id. Required fields: member id, or program id and external id, and new tier id.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def updateMembersBySegment(self, request, context):
        """Updates multiple members based on filtering criteria. This version uses the legacy request format and is maintained for backward compatibility. New integrations should use bulkUpdateMembers.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def deleteMembersBySegment(self, request, context):
        """Deletes multiple members based on filtering criteria. This version uses the legacy request format and is maintained for backward compatibility. New integrations should use bulkDeleteMembers.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def deleteMember(self, request, context):
        """Deletes a single member by their PassKit Id or External ID. Required fields: member id or program id and external id.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def bulkDeleteMembers(self, request, context):
        """Bulk deletes multiple members from a program based on provided criteria. Required fields: program id, protocol and filters criteria.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def countMembersDeprecated(self, request, context):
        """Counts the number of members matching a filter. Required fields: program id. This version uses the legacy request format and is maintained for backward compatibility. New integrations should use countMembers as OR operator is not supported.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def countMembers(self, request, context):
        """Counts the number of members matching a filter. Required fields: program id.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getMessageHistoryForMember(self, request, context):
        """[UNIMPLEMENTED] Retrieves the message history sent to a member. Required fields: member id.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getMetaKeysForProgram(self, request, context):
        """Retrieves meta keys (custom fields) for a specific program. Required fields: program id.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def renewMembersExpiry(self, request, context):
        """Batch updates the expiry dates for ALL members. Required fields: program id, tier id and new expiry settings.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def updateMemberExpiry(self, request, context):
        """Updates the expiry date for a member’s pass using the PassKit Id or External Id. Required fields: member id, or external id and program id, and new expiry date.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def patchPerson(self, request, context):
        """Updates a member's personal information, such as name, address, or contact details. Required fields: member id, or external id and program id, and new member information.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def countMemberEvents(self, request, context):
        """Counts the number of member events for a specific program based on given filters. Required fields: program id.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def listMemberEvents(self, request, context):
        """Lists events related to members in a specific program, supporting filtering and pagination. Required fields: program id.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getMemberEventMetaKeysForProgram(self, request, context):
        """Retrieves the list of meta keys associated with member events for a specific program. Required fields: program id.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def listEventsForMember(self, request, context):
        """Lists events for a specific member, such as check-ins/outs, changes to points etc. Required fields: member id.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def deleteMemberEvents(self, request, context):
        """Deletes member event history for a program based on specified criteria. Required fields: program id.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def deleteEventsForMember(self, request, context):
        """Deletes all member events associated with a specific member. Required fields: member id.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def deleteMemberEvent(self, request, context):
        """Deletes a specific individual member event. Required fields: member event id.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getProgramEnrolment(self, request, context):
        """Retrieves enrolment URLs and QR codes for a membership program, including tier-specific links if applicable. Required fields: program id.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MembersServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'createProgram': grpc.unary_unary_rpc_method_handler(
                    servicer.createProgram,
                    request_deserializer=passkit_dot_io_dot_member_dot_program__pb2.Program.FromString,
                    response_serializer=passkit_dot_io_dot_common_dot_common__objects__pb2.Id.SerializeToString,
            ),
            'updateProgram': grpc.unary_unary_rpc_method_handler(
                    servicer.updateProgram,
                    request_deserializer=passkit_dot_io_dot_member_dot_program__pb2.Program.FromString,
                    response_serializer=passkit_dot_io_dot_member_dot_program__pb2.Program.SerializeToString,
            ),
            'getProgram': grpc.unary_unary_rpc_method_handler(
                    servicer.getProgram,
                    request_deserializer=passkit_dot_io_dot_common_dot_common__objects__pb2.Id.FromString,
                    response_serializer=passkit_dot_io_dot_member_dot_program__pb2.Program.SerializeToString,
            ),
            'copyProgram': grpc.unary_unary_rpc_method_handler(
                    servicer.copyProgram,
                    request_deserializer=passkit_dot_io_dot_member_dot_program__pb2.ProgramCopyRequest.FromString,
                    response_serializer=passkit_dot_io_dot_common_dot_common__objects__pb2.Id.SerializeToString,
            ),
            'deleteProgram': grpc.unary_unary_rpc_method_handler(
                    servicer.deleteProgram,
                    request_deserializer=passkit_dot_io_dot_common_dot_common__objects__pb2.Id.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'listProgramsDeprecated': grpc.unary_stream_rpc_method_handler(
                    servicer.listProgramsDeprecated,
                    request_deserializer=passkit_dot_io_dot_common_dot_pagination__pb2.Pagination.FromString,
                    response_serializer=passkit_dot_io_dot_member_dot_program__pb2.Program.SerializeToString,
            ),
            'listPrograms': grpc.unary_stream_rpc_method_handler(
                    servicer.listPrograms,
                    request_deserializer=passkit_dot_io_dot_common_dot_filter__pb2.Filters.FromString,
                    response_serializer=passkit_dot_io_dot_member_dot_program__pb2.Program.SerializeToString,
            ),
            'createTier': grpc.unary_unary_rpc_method_handler(
                    servicer.createTier,
                    request_deserializer=passkit_dot_io_dot_member_dot_tier__pb2.Tier.FromString,
                    response_serializer=passkit_dot_io_dot_common_dot_common__objects__pb2.Id.SerializeToString,
            ),
            'updateTier': grpc.unary_unary_rpc_method_handler(
                    servicer.updateTier,
                    request_deserializer=passkit_dot_io_dot_member_dot_tier__pb2.Tier.FromString,
                    response_serializer=passkit_dot_io_dot_member_dot_tier__pb2.Tier.SerializeToString,
            ),
            'getTier': grpc.unary_unary_rpc_method_handler(
                    servicer.getTier,
                    request_deserializer=passkit_dot_io_dot_member_dot_tier__pb2.TierRequestInput.FromString,
                    response_serializer=passkit_dot_io_dot_member_dot_tier__pb2.Tier.SerializeToString,
            ),
            'deleteTier': grpc.unary_unary_rpc_method_handler(
                    servicer.deleteTier,
                    request_deserializer=passkit_dot_io_dot_member_dot_tier__pb2.TierRequestInput.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'listTiersDeprecated': grpc.unary_stream_rpc_method_handler(
                    servicer.listTiersDeprecated,
                    request_deserializer=passkit_dot_io_dot_member_dot_member__pb2.ListRequestDeprecated.FromString,
                    response_serializer=passkit_dot_io_dot_member_dot_tier__pb2.Tier.SerializeToString,
            ),
            'listTiers': grpc.unary_stream_rpc_method_handler(
                    servicer.listTiers,
                    request_deserializer=passkit_dot_io_dot_member_dot_member__pb2.ListRequest.FromString,
                    response_serializer=passkit_dot_io_dot_member_dot_tier__pb2.Tier.SerializeToString,
            ),
            'enrolMember': grpc.unary_unary_rpc_method_handler(
                    servicer.enrolMember,
                    request_deserializer=passkit_dot_io_dot_member_dot_member__pb2.Member.FromString,
                    response_serializer=passkit_dot_io_dot_common_dot_common__objects__pb2.Id.SerializeToString,
            ),
            'enrolMemberPublic': grpc.unary_unary_rpc_method_handler(
                    servicer.enrolMemberPublic,
                    request_deserializer=passkit_dot_io_dot_member_dot_member__pb2.Member.FromString,
                    response_serializer=passkit_dot_io_dot_common_dot_common__objects__pb2.Id.SerializeToString,
            ),
            'getMemberRecordById': grpc.unary_unary_rpc_method_handler(
                    servicer.getMemberRecordById,
                    request_deserializer=passkit_dot_io_dot_common_dot_common__objects__pb2.Id.FromString,
                    response_serializer=passkit_dot_io_dot_member_dot_member__pb2.Member.SerializeToString,
            ),
            'getMemberRecordByExternalId': grpc.unary_unary_rpc_method_handler(
                    servicer.getMemberRecordByExternalId,
                    request_deserializer=passkit_dot_io_dot_member_dot_member__pb2.MemberRecordByExternalIdRequest.FromString,
                    response_serializer=passkit_dot_io_dot_member_dot_member__pb2.Member.SerializeToString,
            ),
            'checkInMember': grpc.unary_unary_rpc_method_handler(
                    servicer.checkInMember,
                    request_deserializer=passkit_dot_io_dot_member_dot_member__pb2.MemberCheckInOutRequest.FromString,
                    response_serializer=passkit_dot_io_dot_member_dot_member__events__pb2.MemberEvent.SerializeToString,
            ),
            'checkOutMember': grpc.unary_unary_rpc_method_handler(
                    servicer.checkOutMember,
                    request_deserializer=passkit_dot_io_dot_member_dot_member__pb2.MemberCheckInOutRequest.FromString,
                    response_serializer=passkit_dot_io_dot_member_dot_member__events__pb2.MemberEvent.SerializeToString,
            ),
            'listMembersDeprecated': grpc.unary_stream_rpc_method_handler(
                    servicer.listMembersDeprecated,
                    request_deserializer=passkit_dot_io_dot_member_dot_member__pb2.ListRequestDeprecated.FromString,
                    response_serializer=passkit_dot_io_dot_member_dot_member__pb2.Member.SerializeToString,
            ),
            'listMembers': grpc.unary_stream_rpc_method_handler(
                    servicer.listMembers,
                    request_deserializer=passkit_dot_io_dot_member_dot_member__pb2.ListRequest.FromString,
                    response_serializer=passkit_dot_io_dot_member_dot_member__pb2.Member.SerializeToString,
            ),
            'updateMember': grpc.unary_unary_rpc_method_handler(
                    servicer.updateMember,
                    request_deserializer=passkit_dot_io_dot_member_dot_member__pb2.Member.FromString,
                    response_serializer=passkit_dot_io_dot_common_dot_common__objects__pb2.Id.SerializeToString,
            ),
            'earnPoints': grpc.unary_unary_rpc_method_handler(
                    servicer.earnPoints,
                    request_deserializer=passkit_dot_io_dot_member_dot_member__pb2.EarnBurnPointsRequest.FromString,
                    response_serializer=passkit_dot_io_dot_member_dot_member__pb2.MemberPoints.SerializeToString,
            ),
            'burnPoints': grpc.unary_unary_rpc_method_handler(
                    servicer.burnPoints,
                    request_deserializer=passkit_dot_io_dot_member_dot_member__pb2.EarnBurnPointsRequest.FromString,
                    response_serializer=passkit_dot_io_dot_member_dot_member__pb2.MemberPoints.SerializeToString,
            ),
            'setPoints': grpc.unary_unary_rpc_method_handler(
                    servicer.setPoints,
                    request_deserializer=passkit_dot_io_dot_member_dot_member__pb2.SetPointsRequest.FromString,
                    response_serializer=passkit_dot_io_dot_member_dot_member__pb2.MemberPoints.SerializeToString,
            ),
            'changeMemberTier': grpc.unary_unary_rpc_method_handler(
                    servicer.changeMemberTier,
                    request_deserializer=passkit_dot_io_dot_member_dot_member__pb2.ChangeTierRequest.FromString,
                    response_serializer=passkit_dot_io_dot_member_dot_member__events__pb2.MemberEvent.SerializeToString,
            ),
            'updateMembersBySegment': grpc.unary_unary_rpc_method_handler(
                    servicer.updateMembersBySegment,
                    request_deserializer=passkit_dot_io_dot_member_dot_member__pb2.MemberSegmentRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'deleteMembersBySegment': grpc.unary_unary_rpc_method_handler(
                    servicer.deleteMembersBySegment,
                    request_deserializer=passkit_dot_io_dot_member_dot_member__pb2.MemberSegmentRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'deleteMember': grpc.unary_unary_rpc_method_handler(
                    servicer.deleteMember,
                    request_deserializer=passkit_dot_io_dot_member_dot_member__pb2.Member.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'bulkDeleteMembers': grpc.unary_unary_rpc_method_handler(
                    servicer.bulkDeleteMembers,
                    request_deserializer=passkit_dot_io_dot_common_dot_common__objects__pb2.BulkPassActionRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'countMembersDeprecated': grpc.unary_unary_rpc_method_handler(
                    servicer.countMembersDeprecated,
                    request_deserializer=passkit_dot_io_dot_member_dot_member__pb2.ListRequestDeprecated.FromString,
                    response_serializer=passkit_dot_io_dot_common_dot_common__objects__pb2.Count.SerializeToString,
            ),
            'countMembers': grpc.unary_unary_rpc_method_handler(
                    servicer.countMembers,
                    request_deserializer=passkit_dot_io_dot_member_dot_member__pb2.ListRequest.FromString,
                    response_serializer=passkit_dot_io_dot_common_dot_common__objects__pb2.Count.SerializeToString,
            ),
            'getMessageHistoryForMember': grpc.unary_stream_rpc_method_handler(
                    servicer.getMessageHistoryForMember,
                    request_deserializer=passkit_dot_io_dot_common_dot_pagination__pb2.Pagination.FromString,
                    response_serializer=passkit_dot_io_dot_common_dot_message__pb2.Message.SerializeToString,
            ),
            'getMetaKeysForProgram': grpc.unary_unary_rpc_method_handler(
                    servicer.getMetaKeysForProgram,
                    request_deserializer=passkit_dot_io_dot_common_dot_common__objects__pb2.Id.FromString,
                    response_serializer=passkit_dot_io_dot_common_dot_common__objects__pb2.Strings.SerializeToString,
            ),
            'renewMembersExpiry': grpc.unary_unary_rpc_method_handler(
                    servicer.renewMembersExpiry,
                    request_deserializer=passkit_dot_io_dot_member_dot_member__pb2.UpdateExpiryRequest.FromString,
                    response_serializer=passkit_dot_io_dot_common_dot_common__objects__pb2.Count.SerializeToString,
            ),
            'updateMemberExpiry': grpc.unary_unary_rpc_method_handler(
                    servicer.updateMemberExpiry,
                    request_deserializer=passkit_dot_io_dot_member_dot_member__pb2.MemberExpiry.FromString,
                    response_serializer=passkit_dot_io_dot_common_dot_common__objects__pb2.Id.SerializeToString,
            ),
            'patchPerson': grpc.unary_unary_rpc_method_handler(
                    servicer.patchPerson,
                    request_deserializer=passkit_dot_io_dot_common_dot_personal__pb2.PersonRequest.FromString,
                    response_serializer=passkit_dot_io_dot_common_dot_common__objects__pb2.Id.SerializeToString,
            ),
            'countMemberEvents': grpc.unary_unary_rpc_method_handler(
                    servicer.countMemberEvents,
                    request_deserializer=passkit_dot_io_dot_member_dot_member__pb2.ListRequest.FromString,
                    response_serializer=passkit_dot_io_dot_common_dot_common__objects__pb2.Count.SerializeToString,
            ),
            'listMemberEvents': grpc.unary_stream_rpc_method_handler(
                    servicer.listMemberEvents,
                    request_deserializer=passkit_dot_io_dot_member_dot_member__pb2.ListRequest.FromString,
                    response_serializer=passkit_dot_io_dot_member_dot_member__events__pb2.MemberEvent.SerializeToString,
            ),
            'getMemberEventMetaKeysForProgram': grpc.unary_unary_rpc_method_handler(
                    servicer.getMemberEventMetaKeysForProgram,
                    request_deserializer=passkit_dot_io_dot_common_dot_common__objects__pb2.Id.FromString,
                    response_serializer=passkit_dot_io_dot_common_dot_common__objects__pb2.Strings.SerializeToString,
            ),
            'listEventsForMember': grpc.unary_stream_rpc_method_handler(
                    servicer.listEventsForMember,
                    request_deserializer=passkit_dot_io_dot_common_dot_common__objects__pb2.Id.FromString,
                    response_serializer=passkit_dot_io_dot_member_dot_member__events__pb2.MemberEvent.SerializeToString,
            ),
            'deleteMemberEvents': grpc.unary_unary_rpc_method_handler(
                    servicer.deleteMemberEvents,
                    request_deserializer=passkit_dot_io_dot_member_dot_member__pb2.ListRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'deleteEventsForMember': grpc.unary_unary_rpc_method_handler(
                    servicer.deleteEventsForMember,
                    request_deserializer=passkit_dot_io_dot_common_dot_common__objects__pb2.Id.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'deleteMemberEvent': grpc.unary_unary_rpc_method_handler(
                    servicer.deleteMemberEvent,
                    request_deserializer=passkit_dot_io_dot_common_dot_common__objects__pb2.Id.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'getProgramEnrolment': grpc.unary_unary_rpc_method_handler(
                    servicer.getProgramEnrolment,
                    request_deserializer=passkit_dot_io_dot_common_dot_common__objects__pb2.Id.FromString,
                    response_serializer=passkit_dot_io_dot_common_dot_distribution__pb2.EnrolmentUrls.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'members.Members', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('members.Members', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class Members(object):
    """The PassKit Members API provides a powerful and flexible way to manage your membership programs, including creating, updating, and maintaining digital membership passes for Apple Wallet and Google Wallet. Easily integrate membership functionality into your applications to deliver seamless, real-time experiences for your members.
    """

    @staticmethod
    def createProgram(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/members.Members/createProgram',
            passkit_dot_io_dot_member_dot_program__pb2.Program.SerializeToString,
            passkit_dot_io_dot_common_dot_common__objects__pb2.Id.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def updateProgram(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/members.Members/updateProgram',
            passkit_dot_io_dot_member_dot_program__pb2.Program.SerializeToString,
            passkit_dot_io_dot_member_dot_program__pb2.Program.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def getProgram(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/members.Members/getProgram',
            passkit_dot_io_dot_common_dot_common__objects__pb2.Id.SerializeToString,
            passkit_dot_io_dot_member_dot_program__pb2.Program.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def copyProgram(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/members.Members/copyProgram',
            passkit_dot_io_dot_member_dot_program__pb2.ProgramCopyRequest.SerializeToString,
            passkit_dot_io_dot_common_dot_common__objects__pb2.Id.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def deleteProgram(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/members.Members/deleteProgram',
            passkit_dot_io_dot_common_dot_common__objects__pb2.Id.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def listProgramsDeprecated(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/members.Members/listProgramsDeprecated',
            passkit_dot_io_dot_common_dot_pagination__pb2.Pagination.SerializeToString,
            passkit_dot_io_dot_member_dot_program__pb2.Program.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def listPrograms(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/members.Members/listPrograms',
            passkit_dot_io_dot_common_dot_filter__pb2.Filters.SerializeToString,
            passkit_dot_io_dot_member_dot_program__pb2.Program.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def createTier(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/members.Members/createTier',
            passkit_dot_io_dot_member_dot_tier__pb2.Tier.SerializeToString,
            passkit_dot_io_dot_common_dot_common__objects__pb2.Id.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def updateTier(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/members.Members/updateTier',
            passkit_dot_io_dot_member_dot_tier__pb2.Tier.SerializeToString,
            passkit_dot_io_dot_member_dot_tier__pb2.Tier.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def getTier(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/members.Members/getTier',
            passkit_dot_io_dot_member_dot_tier__pb2.TierRequestInput.SerializeToString,
            passkit_dot_io_dot_member_dot_tier__pb2.Tier.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def deleteTier(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/members.Members/deleteTier',
            passkit_dot_io_dot_member_dot_tier__pb2.TierRequestInput.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def listTiersDeprecated(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/members.Members/listTiersDeprecated',
            passkit_dot_io_dot_member_dot_member__pb2.ListRequestDeprecated.SerializeToString,
            passkit_dot_io_dot_member_dot_tier__pb2.Tier.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def listTiers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/members.Members/listTiers',
            passkit_dot_io_dot_member_dot_member__pb2.ListRequest.SerializeToString,
            passkit_dot_io_dot_member_dot_tier__pb2.Tier.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def enrolMember(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/members.Members/enrolMember',
            passkit_dot_io_dot_member_dot_member__pb2.Member.SerializeToString,
            passkit_dot_io_dot_common_dot_common__objects__pb2.Id.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def enrolMemberPublic(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/members.Members/enrolMemberPublic',
            passkit_dot_io_dot_member_dot_member__pb2.Member.SerializeToString,
            passkit_dot_io_dot_common_dot_common__objects__pb2.Id.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def getMemberRecordById(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/members.Members/getMemberRecordById',
            passkit_dot_io_dot_common_dot_common__objects__pb2.Id.SerializeToString,
            passkit_dot_io_dot_member_dot_member__pb2.Member.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def getMemberRecordByExternalId(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/members.Members/getMemberRecordByExternalId',
            passkit_dot_io_dot_member_dot_member__pb2.MemberRecordByExternalIdRequest.SerializeToString,
            passkit_dot_io_dot_member_dot_member__pb2.Member.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def checkInMember(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/members.Members/checkInMember',
            passkit_dot_io_dot_member_dot_member__pb2.MemberCheckInOutRequest.SerializeToString,
            passkit_dot_io_dot_member_dot_member__events__pb2.MemberEvent.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def checkOutMember(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/members.Members/checkOutMember',
            passkit_dot_io_dot_member_dot_member__pb2.MemberCheckInOutRequest.SerializeToString,
            passkit_dot_io_dot_member_dot_member__events__pb2.MemberEvent.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def listMembersDeprecated(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/members.Members/listMembersDeprecated',
            passkit_dot_io_dot_member_dot_member__pb2.ListRequestDeprecated.SerializeToString,
            passkit_dot_io_dot_member_dot_member__pb2.Member.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def listMembers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/members.Members/listMembers',
            passkit_dot_io_dot_member_dot_member__pb2.ListRequest.SerializeToString,
            passkit_dot_io_dot_member_dot_member__pb2.Member.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def updateMember(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/members.Members/updateMember',
            passkit_dot_io_dot_member_dot_member__pb2.Member.SerializeToString,
            passkit_dot_io_dot_common_dot_common__objects__pb2.Id.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def earnPoints(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/members.Members/earnPoints',
            passkit_dot_io_dot_member_dot_member__pb2.EarnBurnPointsRequest.SerializeToString,
            passkit_dot_io_dot_member_dot_member__pb2.MemberPoints.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def burnPoints(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/members.Members/burnPoints',
            passkit_dot_io_dot_member_dot_member__pb2.EarnBurnPointsRequest.SerializeToString,
            passkit_dot_io_dot_member_dot_member__pb2.MemberPoints.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def setPoints(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/members.Members/setPoints',
            passkit_dot_io_dot_member_dot_member__pb2.SetPointsRequest.SerializeToString,
            passkit_dot_io_dot_member_dot_member__pb2.MemberPoints.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def changeMemberTier(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/members.Members/changeMemberTier',
            passkit_dot_io_dot_member_dot_member__pb2.ChangeTierRequest.SerializeToString,
            passkit_dot_io_dot_member_dot_member__events__pb2.MemberEvent.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def updateMembersBySegment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/members.Members/updateMembersBySegment',
            passkit_dot_io_dot_member_dot_member__pb2.MemberSegmentRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def deleteMembersBySegment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/members.Members/deleteMembersBySegment',
            passkit_dot_io_dot_member_dot_member__pb2.MemberSegmentRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def deleteMember(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/members.Members/deleteMember',
            passkit_dot_io_dot_member_dot_member__pb2.Member.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def bulkDeleteMembers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/members.Members/bulkDeleteMembers',
            passkit_dot_io_dot_common_dot_common__objects__pb2.BulkPassActionRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def countMembersDeprecated(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/members.Members/countMembersDeprecated',
            passkit_dot_io_dot_member_dot_member__pb2.ListRequestDeprecated.SerializeToString,
            passkit_dot_io_dot_common_dot_common__objects__pb2.Count.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def countMembers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/members.Members/countMembers',
            passkit_dot_io_dot_member_dot_member__pb2.ListRequest.SerializeToString,
            passkit_dot_io_dot_common_dot_common__objects__pb2.Count.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def getMessageHistoryForMember(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/members.Members/getMessageHistoryForMember',
            passkit_dot_io_dot_common_dot_pagination__pb2.Pagination.SerializeToString,
            passkit_dot_io_dot_common_dot_message__pb2.Message.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def getMetaKeysForProgram(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/members.Members/getMetaKeysForProgram',
            passkit_dot_io_dot_common_dot_common__objects__pb2.Id.SerializeToString,
            passkit_dot_io_dot_common_dot_common__objects__pb2.Strings.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def renewMembersExpiry(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/members.Members/renewMembersExpiry',
            passkit_dot_io_dot_member_dot_member__pb2.UpdateExpiryRequest.SerializeToString,
            passkit_dot_io_dot_common_dot_common__objects__pb2.Count.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def updateMemberExpiry(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/members.Members/updateMemberExpiry',
            passkit_dot_io_dot_member_dot_member__pb2.MemberExpiry.SerializeToString,
            passkit_dot_io_dot_common_dot_common__objects__pb2.Id.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def patchPerson(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/members.Members/patchPerson',
            passkit_dot_io_dot_common_dot_personal__pb2.PersonRequest.SerializeToString,
            passkit_dot_io_dot_common_dot_common__objects__pb2.Id.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def countMemberEvents(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/members.Members/countMemberEvents',
            passkit_dot_io_dot_member_dot_member__pb2.ListRequest.SerializeToString,
            passkit_dot_io_dot_common_dot_common__objects__pb2.Count.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def listMemberEvents(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/members.Members/listMemberEvents',
            passkit_dot_io_dot_member_dot_member__pb2.ListRequest.SerializeToString,
            passkit_dot_io_dot_member_dot_member__events__pb2.MemberEvent.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def getMemberEventMetaKeysForProgram(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/members.Members/getMemberEventMetaKeysForProgram',
            passkit_dot_io_dot_common_dot_common__objects__pb2.Id.SerializeToString,
            passkit_dot_io_dot_common_dot_common__objects__pb2.Strings.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def listEventsForMember(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/members.Members/listEventsForMember',
            passkit_dot_io_dot_common_dot_common__objects__pb2.Id.SerializeToString,
            passkit_dot_io_dot_member_dot_member__events__pb2.MemberEvent.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def deleteMemberEvents(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/members.Members/deleteMemberEvents',
            passkit_dot_io_dot_member_dot_member__pb2.ListRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def deleteEventsForMember(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/members.Members/deleteEventsForMember',
            passkit_dot_io_dot_common_dot_common__objects__pb2.Id.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def deleteMemberEvent(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/members.Members/deleteMemberEvent',
            passkit_dot_io_dot_common_dot_common__objects__pb2.Id.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def getProgramEnrolment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/members.Members/getProgramEnrolment',
            passkit_dot_io_dot_common_dot_common__objects__pb2.Id.SerializeToString,
            passkit_dot_io_dot_common_dot_distribution__pb2.EnrolmentUrls.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
