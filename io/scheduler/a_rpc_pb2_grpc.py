# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from ct.scheduler import scheduler_pb2 as ct_dot_scheduler_dot_scheduler__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from io.common import common_objects_pb2 as io_dot_common_dot_common__objects__pb2
from io.scheduler import scheduler_pb2 as io_dot_scheduler_dot_scheduler__pb2


class SchedulerStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.createSchedulingJob = channel.unary_unary(
                '/scheduler.Scheduler/createSchedulingJob',
                request_serializer=ct_dot_scheduler_dot_scheduler__pb2.SchedulingJob.SerializeToString,
                response_deserializer=ct_dot_scheduler_dot_scheduler__pb2.SchedulingJobResponse.FromString,
                )
        self.getSchedulingJob = channel.unary_unary(
                '/scheduler.Scheduler/getSchedulingJob',
                request_serializer=io_dot_common_dot_common__objects__pb2.Id.SerializeToString,
                response_deserializer=ct_dot_scheduler_dot_scheduler__pb2.SchedulingJob.FromString,
                )
        self.updateSchedulingJob = channel.unary_unary(
                '/scheduler.Scheduler/updateSchedulingJob',
                request_serializer=ct_dot_scheduler_dot_scheduler__pb2.SchedulingJob.SerializeToString,
                response_deserializer=ct_dot_scheduler_dot_scheduler__pb2.SchedulingJobResponse.FromString,
                )
        self.patchSchedulingJob = channel.unary_unary(
                '/scheduler.Scheduler/patchSchedulingJob',
                request_serializer=ct_dot_scheduler_dot_scheduler__pb2.SchedulingJob.SerializeToString,
                response_deserializer=ct_dot_scheduler_dot_scheduler__pb2.SchedulingJobResponse.FromString,
                )
        self.deleteSchedulingJob = channel.unary_unary(
                '/scheduler.Scheduler/deleteSchedulingJob',
                request_serializer=io_dot_common_dot_common__objects__pb2.Id.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.getSchedulingJobHistory = channel.unary_unary(
                '/scheduler.Scheduler/getSchedulingJobHistory',
                request_serializer=io_dot_common_dot_common__objects__pb2.Id.SerializeToString,
                response_deserializer=ct_dot_scheduler_dot_scheduler__pb2.JobHistory.FromString,
                )
        self.listSchedulingJobHistories = channel.unary_stream(
                '/scheduler.Scheduler/listSchedulingJobHistories',
                request_serializer=io_dot_scheduler_dot_scheduler__pb2.ListRequest.SerializeToString,
                response_deserializer=ct_dot_scheduler_dot_scheduler__pb2.JobHistory.FromString,
                )


class SchedulerServicer(object):
    """Missing associated documentation comment in .proto file."""

    def createSchedulingJob(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getSchedulingJob(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def updateSchedulingJob(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def patchSchedulingJob(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def deleteSchedulingJob(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getSchedulingJobHistory(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def listSchedulingJobHistories(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SchedulerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'createSchedulingJob': grpc.unary_unary_rpc_method_handler(
                    servicer.createSchedulingJob,
                    request_deserializer=ct_dot_scheduler_dot_scheduler__pb2.SchedulingJob.FromString,
                    response_serializer=ct_dot_scheduler_dot_scheduler__pb2.SchedulingJobResponse.SerializeToString,
            ),
            'getSchedulingJob': grpc.unary_unary_rpc_method_handler(
                    servicer.getSchedulingJob,
                    request_deserializer=io_dot_common_dot_common__objects__pb2.Id.FromString,
                    response_serializer=ct_dot_scheduler_dot_scheduler__pb2.SchedulingJob.SerializeToString,
            ),
            'updateSchedulingJob': grpc.unary_unary_rpc_method_handler(
                    servicer.updateSchedulingJob,
                    request_deserializer=ct_dot_scheduler_dot_scheduler__pb2.SchedulingJob.FromString,
                    response_serializer=ct_dot_scheduler_dot_scheduler__pb2.SchedulingJobResponse.SerializeToString,
            ),
            'patchSchedulingJob': grpc.unary_unary_rpc_method_handler(
                    servicer.patchSchedulingJob,
                    request_deserializer=ct_dot_scheduler_dot_scheduler__pb2.SchedulingJob.FromString,
                    response_serializer=ct_dot_scheduler_dot_scheduler__pb2.SchedulingJobResponse.SerializeToString,
            ),
            'deleteSchedulingJob': grpc.unary_unary_rpc_method_handler(
                    servicer.deleteSchedulingJob,
                    request_deserializer=io_dot_common_dot_common__objects__pb2.Id.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'getSchedulingJobHistory': grpc.unary_unary_rpc_method_handler(
                    servicer.getSchedulingJobHistory,
                    request_deserializer=io_dot_common_dot_common__objects__pb2.Id.FromString,
                    response_serializer=ct_dot_scheduler_dot_scheduler__pb2.JobHistory.SerializeToString,
            ),
            'listSchedulingJobHistories': grpc.unary_stream_rpc_method_handler(
                    servicer.listSchedulingJobHistories,
                    request_deserializer=io_dot_scheduler_dot_scheduler__pb2.ListRequest.FromString,
                    response_serializer=ct_dot_scheduler_dot_scheduler__pb2.JobHistory.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'scheduler.Scheduler', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Scheduler(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def createSchedulingJob(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/scheduler.Scheduler/createSchedulingJob',
            ct_dot_scheduler_dot_scheduler__pb2.SchedulingJob.SerializeToString,
            ct_dot_scheduler_dot_scheduler__pb2.SchedulingJobResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getSchedulingJob(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/scheduler.Scheduler/getSchedulingJob',
            io_dot_common_dot_common__objects__pb2.Id.SerializeToString,
            ct_dot_scheduler_dot_scheduler__pb2.SchedulingJob.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def updateSchedulingJob(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/scheduler.Scheduler/updateSchedulingJob',
            ct_dot_scheduler_dot_scheduler__pb2.SchedulingJob.SerializeToString,
            ct_dot_scheduler_dot_scheduler__pb2.SchedulingJobResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def patchSchedulingJob(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/scheduler.Scheduler/patchSchedulingJob',
            ct_dot_scheduler_dot_scheduler__pb2.SchedulingJob.SerializeToString,
            ct_dot_scheduler_dot_scheduler__pb2.SchedulingJobResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def deleteSchedulingJob(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/scheduler.Scheduler/deleteSchedulingJob',
            io_dot_common_dot_common__objects__pb2.Id.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getSchedulingJobHistory(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/scheduler.Scheduler/getSchedulingJobHistory',
            io_dot_common_dot_common__objects__pb2.Id.SerializeToString,
            ct_dot_scheduler_dot_scheduler__pb2.JobHistory.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def listSchedulingJobHistories(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/scheduler.Scheduler/listSchedulingJobHistories',
            io_dot_scheduler_dot_scheduler__pb2.ListRequest.SerializeToString,
            ct_dot_scheduler_dot_scheduler__pb2.JobHistory.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
