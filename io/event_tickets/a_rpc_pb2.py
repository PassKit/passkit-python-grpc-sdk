# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: io/event_tickets/a_rpc.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import builder as _builder
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from google.api import annotations_pb2 as google_dot_api_dot_annotations__pb2
from io.common import common_objects_pb2 as io_dot_common_dot_common__objects__pb2
from io.common import filter_pb2 as io_dot_common_dot_filter__pb2
from io.common import reporting_pb2 as io_dot_common_dot_reporting__pb2
from io.event_tickets import event_pb2 as io_dot_event__tickets_dot_event__pb2
from io.event_tickets import production_pb2 as io_dot_event__tickets_dot_production__pb2
from io.event_tickets import ticket_type_pb2 as io_dot_event__tickets_dot_ticket__type__pb2
from io.event_tickets import ticket_pb2 as io_dot_event__tickets_dot_ticket__pb2
from io.event_tickets import venue_pb2 as io_dot_event__tickets_dot_venue__pb2
from protoc_gen_openapiv2.options import annotations_pb2 as protoc__gen__openapiv2_dot_options_dot_annotations__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x1cio/event_tickets/a_rpc.proto\x12\revent_tickets\x1a\x1bgoogle/protobuf/empty.proto\x1a\x1cgoogle/api/annotations.proto\x1a\x1eio/common/common_objects.proto\x1a\x16io/common/filter.proto\x1a\x19io/common/reporting.proto\x1a\x1cio/event_tickets/event.proto\x1a!io/event_tickets/production.proto\x1a\"io/event_tickets/ticket_type.proto\x1a\x1dio/event_tickets/ticket.proto\x1a\x1cio/event_tickets/venue.proto\x1a.protoc-gen-openapiv2/options/annotations.proto2\xe6W\n\x0c\x45ventTickets\x12\x98\x01\n\x10\x63reateProduction\x12\x19.event_tickets.Production\x1a\x06.io.Id\"a\x82\xd3\xe4\x93\x02\x1d\"\x18/eventTickets/production:\x01*\x92\x41;\n\x0bProductions\x12\x11\x43reate Production\x1a\x19\x43reates a new Production.\x12\xc9\x02\n\x0fpatchProduction\x12\x19.event_tickets.Production\x1a\x19.event_tickets.Production\"\xff\x01\x82\xd3\xe4\x93\x02\x1d\x32\x18/eventTickets/production:\x01*\x92\x41\xd8\x01\n\x0bProductions\x12\x10Patch Production\x1a\xb6\x01Partially updates an existing Production. Only id/uid and updating fields are required. Note: changes will update and affect all existing Events & Tickets related to this Production.\x12\xbb\x02\n\x10updateProduction\x12\x19.event_tickets.Production\x1a\x19.event_tickets.Production\"\xf0\x01\x82\xd3\xe4\x93\x02\x1d\x1a\x18/eventTickets/production:\x01*\x92\x41\xc9\x01\n\x0bProductions\x12\x11Update Production\x1a\xa6\x01\x46ully updates an existing Production. All required fields are required. Note: changes will update and affect all existing Events & Tickets related to this Production.\x12\x97\x01\n\rgetProduction\x12\x06.io.Id\x1a\x19.event_tickets.Production\"c\x82\xd3\xe4\x93\x02\x1f\x12\x1d/eventTickets/production/{id}\x92\x41;\n\x0bProductions\x12\x0eGet Production\x1a\x1cGets an existing Production.\x12\x99\x03\n\x10\x64\x65leteProduction\x12\x19.event_tickets.Production\x1a\x16.google.protobuf.Empty\"\xd1\x02\x82\xd3\xe4\x93\x02\x1d*\x18/eventTickets/production:\x01*\x92\x41\xaa\x02\n\x0bProductions\x12\x11\x44\x65lete Production\x1a\x87\x02\x44\x65letes an existing Production. Deleting a Production results in all Ticket Types, Events & Tickets for the Production being deleted and invalidated in the customers Mobile Wallet; rendering them unusable. This method is irreversible and should be used with care.\x12\xb2\x01\n\x0flistProductions\x12\x0b.io.Filters\x1a\x19.event_tickets.Production\"u\x82\xd3\xe4\x93\x02\x1e\"\x19/eventTickets/productions:\x01*\x92\x41N\n\x0bProductions\x12\x10List Productions\x1a-Lists all Productions for the logged in user.0\x01\x12\xe0\x01\n\x0cgetAnalytics\x12\x14.io.AnalyticsRequest\x1a*.event_tickets.ProductionAnalyticsResponse\"\x8d\x01\x82\xd3\xe4\x93\x02.\x12,/eventTickets/production/{classId}/analytics\x92\x41V\n\x0bProductions\x12\x18Get Production Analytics\x1a-Retrieves Production specific analytics data.\x12\xa9\x01\n\x0e\x63opyProduction\x12$.event_tickets.ProductionCopyRequest\x1a\x06.io.Id\"i\x82\xd3\xe4\x93\x02\"\"\x1d/eventTickets/production/copy:\x01*\x92\x41>\n\x0bProductions\x12\x0f\x43opy Production\x1a\x1e\x43opies an existing Production.\x12z\n\x0b\x63reateVenue\x12\x14.event_tickets.Venue\x1a\x06.io.Id\"M\x82\xd3\xe4\x93\x02\x18\"\x13/eventTickets/venue:\x01*\x92\x41,\n\x06Venues\x12\x0c\x43reate Venue\x1a\x14\x43reates a new Venue.\x12\x95\x02\n\x0bupdateVenue\x12\x14.event_tickets.Venue\x1a\x14.event_tickets.Venue\"\xd9\x01\x82\xd3\xe4\x93\x02\x18\x1a\x13/eventTickets/venue:\x01*\x92\x41\xb7\x01\n\x06Venues\x12\x0cUpdate Venue\x1a\x9e\x01Updates an existing Venue. Requires ID or User Defined ID to be set. Note: changes will update and affect all existing Events & Tickets related to this Venue.\x12\x9d\x02\n\npatchVenue\x12\x14.event_tickets.Venue\x1a\x14.event_tickets.Venue\"\xe2\x01\x82\xd3\xe4\x93\x02\x18\x32\x13/eventTickets/venue:\x01*\x92\x41\xc0\x01\n\x06Venues\x12\x0bPatch Venue\x1a\xa8\x01Partially updates an existing Venue. Requires ID or User Defined ID to be set. Note: changes will update and affect all existing Events & Tickets related to this Venue.\x12\x9e\x01\n\x0cgetVenueById\x12\x06.io.Id\x1a\x14.event_tickets.Venue\"p\x82\xd3\xe4\x93\x02\x1a\x12\x18/eventTickets/venue/{id}\x92\x41M\n\x06Venues\x12\tGet Venue\x1a\x38Gets an existing Venue by PassKit ID or User Defined ID.\x12\xd5\x02\n\x0b\x64\x65leteVenue\x12\x14.event_tickets.Venue\x1a\x16.google.protobuf.Empty\"\x97\x02\x82\xd3\xe4\x93\x02\x18*\x13/eventTickets/venue:\x01*\x92\x41\xf5\x01\n\x06Venues\x12\x0c\x44\x65lete Venue\x1a\xdc\x01\x44\x65letes an existing Venue. Deleting a Venue, Events & Tickets for the Venue being deleted and invalidated in the customers Mobile Wallet; rendering them unusable. This method is irreversible and should be used with care.\x12\x94\x01\n\nlistVenues\x12\x0b.io.Filters\x1a\x14.event_tickets.Venue\"a\x82\xd3\xe4\x93\x02\x19\"\x14/eventTickets/venues:\x01*\x92\x41?\n\x06Venues\x12\x0bList Venues\x1a(Lists all Venues for the logged in user.0\x01\x12\xa1\x02\n\x0b\x63reateEvent\x12\x14.event_tickets.Event\x1a\x06.io.Id\"\xf3\x01\x82\xd3\xe4\x93\x02\x18\"\x13/eventTickets/event:\x01*\x92\x41\xd1\x01\n\x06\x45vents\x12\x0c\x43reate Event\x1a\xb8\x01\x43reates a new Event instance for a Production. You don\'t need to pass in the full Production and Venue objects if they already exist, you can provide just the id and it will work fine.\x12\xc0\x02\n\x0bupdateEvent\x12\x14.event_tickets.Event\x1a\x14.event_tickets.Event\"\x84\x02\x82\xd3\xe4\x93\x02\x18\x1a\x13/eventTickets/event:\x01*\x92\x41\xe2\x01\n\x06\x45vents\x12\x0cUpdate Event\x1a\xc9\x01\x46ully updates an existing Event. Requires ID to be set. Note1: changes will update & affect all existing tickets related to this event. Note2: Production and Venue cannot be changed from this endpoint.\x12\xff\x01\n\npatchEvent\x12\x14.event_tickets.Event\x1a\x14.event_tickets.Event\"\xc4\x01\x82\xd3\xe4\x93\x02\x18\x32\x13/eventTickets/event:\x01*\x92\x41\xa2\x01\n\x06\x45vents\x12\x0bPatch Event\x1a\x8a\x01Partially updates an existing Event. Requires ID to be set. Note: changes will update & affect all existing tickets related to this event.\x12\x8c\x01\n\x0cgetEventById\x12\x06.io.Id\x1a\x14.event_tickets.Event\"^\x82\xd3\xe4\x93\x02\x1d\x12\x1b/eventTickets/event/id/{id}\x92\x41\x38\n\x06\x45vents\x12\x0fGet Event by ID\x1a\x1dGets an existing Event by ID.\x12\xce\x01\n\x1bgetEventByStartDateAndVenue\x12\x1e.event_tickets.GetEventRequest\x1a\x14.event_tickets.Event\"y\x82\xd3\xe4\x93\x02\x1d\x12\x1b/eventTickets/event/details\x92\x41S\n\x06\x45vents\x12\x1fGet Event by Start Date & Venue\x1a(Gets an existing Event by event details.\x12\xf2\x02\n\x0b\x64\x65leteEvent\x12\x14.event_tickets.Event\x1a\x16.google.protobuf.Empty\"\xb4\x02\x82\xd3\xe4\x93\x02\x18*\x13/eventTickets/event:\x01*\x92\x41\x92\x02\n\x06\x45vents\x12\x0c\x44\x65lete Event\x1a\xf9\x01\x44\x65letes an existing Event. Requires ID to be set. Deleting an Event results in all tickets for the Event being deleted and invalidated in the customers Mobile Wallet; rendering them unusable. This method is irreversible and should be used with care.\x12\xb3\x01\n\nlistEvents\x12\x1f.event_tickets.EventListRequest\x1a .event_tickets.EventListResponse\"`\x82\xd3\xe4\x93\x02\x1e\"\x19/eventTickets/events/list:\x01*\x92\x41\x39\n\x06\x45vents\x12\x0bList Events\x1a\"Lists all Events for a Production.0\x01\x12\x94\x01\n\x10\x63reateTicketType\x12\x19.event_tickets.TicketType\x1a\x06.io.Id\"]\x82\xd3\xe4\x93\x02\x1d\"\x18/eventTickets/ticketType:\x01*\x92\x41\x37\n\x0cTicket Types\x12\x0bTicket Type\x1a\x1a\x43reates a new Ticket Type.\x12\x8b\x02\n\x10updateTicketType\x12\x19.event_tickets.TicketType\x1a\x19.event_tickets.TicketType\"\xc0\x01\x82\xd3\xe4\x93\x02\x1d\x1a\x18/eventTickets/ticketType:\x01*\x92\x41\x99\x01\n\x0cTicket Types\x12\x12Update Ticket Type\x1auUpdates an existing Ticket Type. Note: changes will update & affect all existing Tickets related to this Ticket Type.\x12\x93\x02\n\x0fpatchTicketType\x12\x19.event_tickets.TicketType\x1a\x19.event_tickets.TicketType\"\xc9\x01\x82\xd3\xe4\x93\x02\x1d\x32\x18/eventTickets/ticketType:\x01*\x92\x41\xa2\x01\n\x0cTicket Types\x12\x11Patch Ticket Type\x1a\x7fPartially updates an existing Ticket Type. Note: changes will update & affect all existing Tickets related to this Ticket Type.\x12\xb5\x01\n\x11getTicketTypeById\x12\x06.io.Id\x1a\x19.event_tickets.TicketType\"}\x82\xd3\xe4\x93\x02\"\x12 /eventTickets/ticketType/id/{id}\x92\x41R\n\x0cTicket Types\x12\x1dGet Ticket Type by PassKit ID\x1a#Gets an existing Ticket Type by ID.\x12\x90\x02\n\x1cgetTicketTypeByUserDefinedId\x12\x1e.event_tickets.GetByUidRequest\x1a\x19.event_tickets.TicketType\"\xb4\x01\x82\xd3\xe4\x93\x02\x33\x12\x31/eventTickets/ticketType/uid/{productionId}/{uid}\x92\x41x\n\x0cTicket Types\x12\"Get Ticket Type by User Defined ID\x1a\x44Gets an existing Ticket Type by User Defined ID (and Production ID).\x12\xb5\x03\n\x10\x64\x65leteTicketType\x12\x19.event_tickets.TicketType\x1a\x16.google.protobuf.Empty\"\xed\x02\x82\xd3\xe4\x93\x02\x1d*\x18/eventTickets/ticketType:\x01*\x92\x41\xc6\x02\n\x0cTicket Types\x12\x12\x44\x65lete Ticket Type\x1a\xa1\x02\x44\x65letes an existing Ticket Type by ID, or User Defined ID (and Production ID). Deleting a Ticket Type results in the tickets for the Ticket Type being deleted and invalidated in the customers Mobile Wallet; rendering them unusable. This method is irreversible and should be used with care.\x12\xd8\x01\n\x0flistTicketTypes\x12$.event_tickets.TicketTypeListRequest\x1a\x19.event_tickets.TicketType\"\x81\x01\x82\xd3\xe4\x93\x02-\"(/eventTickets/ticketTypes/{productionId}:\x01*\x92\x41K\n\x0cTicket Types\x12\x11List Ticket Types\x1a(Lists all Ticket Types for a Production.0\x01\x12\xee\x02\n\x0bissueTicket\x12!.event_tickets.IssueTicketRequest\x1a\x06.io.Id\"\xb3\x02\x82\xd3\xe4\x93\x02\x19\"\x14/eventTickets/ticket:\x01*\x92\x41\x90\x02\n\x07Tickets\x12\x0cIssue Ticket\x1a\xf6\x01\x43reates a new unique Ticket record by PassKit IDs. If the Event does not yet exist, it will automatically be created. The combination of event.production.id, event.startDate, event.venue.id & ticket.ticketTypeUid is enforced as unique for Events.\x12\xd1\x03\n\x0fissueTicketById\x12\x15.event_tickets.Ticket\x1a%.event_tickets.IssueTicketResponseIds\"\xff\x02\x82\xd3\xe4\x93\x02\x1c\"\x17/eventTickets/ticket/id:\x01*\x92\x41\xd9\x02\n\x07Tickets\x12\x0cIssue Ticket\x1a\xbf\x02\x43reates a new unique Ticket record by User Defined IDs. User Defined IDs for Production, Venue and TicketType are required. If the Event does not yet exist, it will automatically be created. The combination of event.production.id, event.startDate, event.venue.id & ticket.ticketTypeUid is enforced as unique for Events.\x12\xe5\x01\n\x0cupdateTicket\x12\x15.event_tickets.Ticket\x1a\x06.io.Id\"\xb5\x01\x82\xd3\xe4\x93\x02\x19\x1a\x14/eventTickets/ticket:\x01*\x92\x41\x92\x01\n\x07Tickets\x12\rUpdate Ticket\x1axUpdates an existing Ticket. Requires ticket.ID to be set, or ticket.ticketNumber + ticket.event.production.id to be set.\x12\xc0\x01\n\x0bpatchPerson\x12 .event_tickets.EventTicketPerson\x1a\x06.io.Id\"\x86\x01\x82\xd3\xe4\x93\x02 2\x1b/eventTickets/ticket/person:\x01*\x92\x41]\n\x07Tickets\x12\x1bUpdate Personal Information\x1a\x35Updates personal information of a event ticket holder\x12\x8b\x03\n\x0evalidateTicket\x12$.event_tickets.ValidateTicketRequest\x1a%.event_tickets.ValidateTicketResponse\"\xab\x02\x82\xd3\xe4\x93\x02\"\x1a\x1d/eventTickets/ticket/validate:\x01*\x92\x41\xff\x01\n\x07Tickets\x12\x0fValidate Ticket\x1a\xe2\x01Validates an existing Ticket. Use this endpoint when you want to check validity of a ticket. Tickets can be validated multiple times. Requires ticket.id to be set, or ticket.ticketNumber + ticket.event.production.id to be set.\x12\x95\x02\n\x0credeemTicket\x12\".event_tickets.RedeemTicketRequest\x1a\x06.io.Id\"\xd8\x01\x82\xd3\xe4\x93\x02 \x1a\x1b/eventTickets/ticket/redeem:\x01*\x92\x41\xae\x01\n\x07Tickets\x12\rRedeem Ticket\x1a\x93\x01Redeems an existing Ticket. Use this endpoint when you want to capture redemption data and trigger the switch to the redeemed design of the Ticket.\x12\xd0\x02\n\x1aredeemTicketsByOrderNumber\x12\".event_tickets.RedeemByOrderNumber\x1a\x07.io.Ids\"\x84\x02\x82\xd3\xe4\x93\x02-\x1a(/eventTickets/tickets/orderNumber/redeem:\x01*\x92\x41\xcd\x01\n\x07Tickets\x12\x1eRedeem Tickets by Order Number\x1a\xa1\x01Redeems existing Tickets by Order Number. Use this endpoint when you want to capture redemption data and trigger the switch to the redeemed design of the Ticket.\x12\x8f\x01\n\rgetTicketById\x12\x06.io.Id\x1a\x15.event_tickets.Ticket\"_\x82\xd3\xe4\x93\x02\x1e\x12\x1c/eventTickets/ticket/id/{id}\x92\x41\x38\n\x07Tickets\x12\x10Get Ticket by ID\x1a\x1bGets a Ticket record by ID.\x12\xd0\x01\n\x17getTicketByTicketNumber\x12\".event_tickets.TicketNumberRequest\x1a\x15.event_tickets.Ticket\"z\x82\xd3\xe4\x93\x02#\x12!/eventTickets/ticket/ticketNumber\x92\x41N\n\x07Tickets\x12\x1bGet Ticket by Ticket Number\x1a&Gets a Ticket record by Ticket Number.\x12\xce\x01\n\x17getTicketsByOrderNumber\x12!.event_tickets.OrderNumberRequest\x1a\x16.event_tickets.Tickets\"x\x82\xd3\xe4\x93\x02#\x12!/eventTickets/tickets/orderNumber\x92\x41L\n\x07Tickets\x12\x1bGet Tickets by Order Number\x1a$Gets Ticket records by Order Number.\x12\xae\x02\n\x12getEventTicketPass\x12%.event_tickets.EventTicketPassRequest\x1a\x0f.io.PassBundles\"\xdf\x01\x82\xd3\xe4\x93\x02\x17\"\x12/eventTickets/pass:\x01*\x92\x41\xbe\x01\n\x07Tickets\x12\x15Get Event Ticket Pass\x1a\x9b\x01Retrieves digital event ticket pass(es) in the requested format based on the index provided. Only one of ticketId, ticketNumber or orderNumber is required.\x12\x95\x03\n\x0c\x64\x65leteTicket\x12\x17.event_tickets.TicketId\x1a\x16.google.protobuf.Empty\"\xd3\x02\x82\xd3\xe4\x93\x02\x19*\x14/eventTickets/ticket:\x01*\x92\x41\xb0\x02\n\x07Tickets\x12\rDelete Ticket\x1a\x95\x02\x44\x65lete an existing Ticket by Id or Ticket Number. Invalidates the ticket in the customers Mobile Wallet; rendering it useless. This method is irreversible and should be used with care. Requires ticket.ID to be set, or ticket.ticketNumber + ticket.event.production.id to be set.\x12\xdd\x02\n\x1a\x64\x65leteTicketsByOrderNumber\x12!.event_tickets.OrderNumberRequest\x1a\x16.google.protobuf.Empty\"\x83\x02\x82\xd3\xe4\x93\x02\x1e*\x19/eventTickets/orderNumber:\x01*\x92\x41\xdb\x01\n\x07Tickets\x12\x1e\x44\x65lete Tickets by Order Number\x1a\xaf\x01\x44\x65lete existing Ticketd by Order Number. Invalidates the ticket in the customers Mobile Wallet; rendering it useless. This method is irreversible and should be used with care.\x12\xcf\x01\n\x0blistTickets\x12 .event_tickets.TicketListRequest\x1a\".event_tickets.TicketLimitedFields\"x\x82\xd3\xe4\x93\x02\x1f\"\x1a/eventTickets/tickets/list:\x01*\x92\x41P\n\x07Tickets\x12\x0cList Tickets\x1a\x37List all tickets for a Production. Supports pagination.0\x01\x12\xcb\x01\n\x0c\x63ountTickets\x12 .event_tickets.TicketListRequest\x1a\t.io.Count\"\x8d\x01\x82\xd3\xe4\x93\x02 \"\x1b/eventTickets/tickets/count:\x01*\x92\x41\x64\n\x07Tickets\x12\rCount Tickets\x1aJCount all tickets for a Production, Event, Ticket Type and / or Start DateB\xec\x07\n\x1d\x63om.passkit.grpc.EventTicketsZ2stash.passkit.com/io/model/sdk/go/io/event_tickets\xaa\x02\x19PassKit.Grpc.EventTickets\x92\x41\xf9\x06\x12\xb4\x02\n\x19PassKit Event Tickets API\x12\x91\x01This API enables you to get all your Digital Event Tickets into Apple Wallet & Google Pay, from theatre and cinema, to sport events and concerts.\x1a\x38https://passkit.com/legal/terms-of-subscription-service/\"?\n\x0fPassKit Support\x12\x17https://docs.passkit.io\x1a\x13support@passkit.com2\x08\x30.1-spec*\x01\x02\x32\x10\x61pplication/json:\x10\x61pplication/jsonR9\n\x03\x32\x30\x30\x12\x32\n(Returned when the request is successful.\x12\x06\n\x04\x9a\x02\x01\x07R4\n\x03\x34\x30\x30\x12-\n+Returned when wrong user input is provided.R0\n\x03\x34\x30\x31\x12)\n\'Returned when the user is unauthorized.RP\n\x03\x34\x30\x33\x12I\nGReturned when the user does not have permission to access the resource.R;\n\x03\x34\x30\x34\x12\x34\n*Returned when the resource does not exist.\x12\x06\n\x04\x9a\x02\x01\x07R<\n\x03\x35\x30\x30\x12\x35\n+Returned when there is an unexpected error.\x12\x06\n\x04\x9a\x02\x01\x07RW\n\x03\x35\x30\x33\x12P\nNServer is unavailable. Back off for 250ms and repeat request until successful.Z>\n<\n\napiKeyAuth\x12.\x08\x02\x12\x19JWT Authentication token.\x1a\rAuthorization \x02\x62\x10\n\x0e\n\napiKeyAuth\x12\x00\x62\x06proto3')

_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'io.event_tickets.a_rpc_pb2', globals())
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'\n\035com.passkit.grpc.EventTicketsZ2stash.passkit.com/io/model/sdk/go/io/event_tickets\252\002\031PassKit.Grpc.EventTickets\222A\371\006\022\264\002\n\031PassKit Event Tickets API\022\221\001This API enables you to get all your Digital Event Tickets into Apple Wallet & Google Pay, from theatre and cinema, to sport events and concerts.\0328https://passkit.com/legal/terms-of-subscription-service/\"?\n\017PassKit Support\022\027https://docs.passkit.io\032\023support@passkit.com2\0100.1-spec*\001\0022\020application/json:\020application/jsonR9\n\003200\0222\n(Returned when the request is successful.\022\006\n\004\232\002\001\007R4\n\003400\022-\n+Returned when wrong user input is provided.R0\n\003401\022)\n\'Returned when the user is unauthorized.RP\n\003403\022I\nGReturned when the user does not have permission to access the resource.R;\n\003404\0224\n*Returned when the resource does not exist.\022\006\n\004\232\002\001\007R<\n\003500\0225\n+Returned when there is an unexpected error.\022\006\n\004\232\002\001\007RW\n\003503\022P\nNServer is unavailable. Back off for 250ms and repeat request until successful.Z>\n<\n\napiKeyAuth\022.\010\002\022\031JWT Authentication token.\032\rAuthorization \002b\020\n\016\n\napiKeyAuth\022\000'
  _EVENTTICKETS.methods_by_name['createProduction']._options = None
  _EVENTTICKETS.methods_by_name['createProduction']._serialized_options = b'\202\323\344\223\002\035\"\030/eventTickets/production:\001*\222A;\n\013Productions\022\021Create Production\032\031Creates a new Production.'
  _EVENTTICKETS.methods_by_name['patchProduction']._options = None
  _EVENTTICKETS.methods_by_name['patchProduction']._serialized_options = b'\202\323\344\223\002\0352\030/eventTickets/production:\001*\222A\330\001\n\013Productions\022\020Patch Production\032\266\001Partially updates an existing Production. Only id/uid and updating fields are required. Note: changes will update and affect all existing Events & Tickets related to this Production.'
  _EVENTTICKETS.methods_by_name['updateProduction']._options = None
  _EVENTTICKETS.methods_by_name['updateProduction']._serialized_options = b'\202\323\344\223\002\035\032\030/eventTickets/production:\001*\222A\311\001\n\013Productions\022\021Update Production\032\246\001Fully updates an existing Production. All required fields are required. Note: changes will update and affect all existing Events & Tickets related to this Production.'
  _EVENTTICKETS.methods_by_name['getProduction']._options = None
  _EVENTTICKETS.methods_by_name['getProduction']._serialized_options = b'\202\323\344\223\002\037\022\035/eventTickets/production/{id}\222A;\n\013Productions\022\016Get Production\032\034Gets an existing Production.'
  _EVENTTICKETS.methods_by_name['deleteProduction']._options = None
  _EVENTTICKETS.methods_by_name['deleteProduction']._serialized_options = b'\202\323\344\223\002\035*\030/eventTickets/production:\001*\222A\252\002\n\013Productions\022\021Delete Production\032\207\002Deletes an existing Production. Deleting a Production results in all Ticket Types, Events & Tickets for the Production being deleted and invalidated in the customers Mobile Wallet; rendering them unusable. This method is irreversible and should be used with care.'
  _EVENTTICKETS.methods_by_name['listProductions']._options = None
  _EVENTTICKETS.methods_by_name['listProductions']._serialized_options = b'\202\323\344\223\002\036\"\031/eventTickets/productions:\001*\222AN\n\013Productions\022\020List Productions\032-Lists all Productions for the logged in user.'
  _EVENTTICKETS.methods_by_name['getAnalytics']._options = None
  _EVENTTICKETS.methods_by_name['getAnalytics']._serialized_options = b'\202\323\344\223\002.\022,/eventTickets/production/{classId}/analytics\222AV\n\013Productions\022\030Get Production Analytics\032-Retrieves Production specific analytics data.'
  _EVENTTICKETS.methods_by_name['copyProduction']._options = None
  _EVENTTICKETS.methods_by_name['copyProduction']._serialized_options = b'\202\323\344\223\002\"\"\035/eventTickets/production/copy:\001*\222A>\n\013Productions\022\017Copy Production\032\036Copies an existing Production.'
  _EVENTTICKETS.methods_by_name['createVenue']._options = None
  _EVENTTICKETS.methods_by_name['createVenue']._serialized_options = b'\202\323\344\223\002\030\"\023/eventTickets/venue:\001*\222A,\n\006Venues\022\014Create Venue\032\024Creates a new Venue.'
  _EVENTTICKETS.methods_by_name['updateVenue']._options = None
  _EVENTTICKETS.methods_by_name['updateVenue']._serialized_options = b'\202\323\344\223\002\030\032\023/eventTickets/venue:\001*\222A\267\001\n\006Venues\022\014Update Venue\032\236\001Updates an existing Venue. Requires ID or User Defined ID to be set. Note: changes will update and affect all existing Events & Tickets related to this Venue.'
  _EVENTTICKETS.methods_by_name['patchVenue']._options = None
  _EVENTTICKETS.methods_by_name['patchVenue']._serialized_options = b'\202\323\344\223\002\0302\023/eventTickets/venue:\001*\222A\300\001\n\006Venues\022\013Patch Venue\032\250\001Partially updates an existing Venue. Requires ID or User Defined ID to be set. Note: changes will update and affect all existing Events & Tickets related to this Venue.'
  _EVENTTICKETS.methods_by_name['getVenueById']._options = None
  _EVENTTICKETS.methods_by_name['getVenueById']._serialized_options = b'\202\323\344\223\002\032\022\030/eventTickets/venue/{id}\222AM\n\006Venues\022\tGet Venue\0328Gets an existing Venue by PassKit ID or User Defined ID.'
  _EVENTTICKETS.methods_by_name['deleteVenue']._options = None
  _EVENTTICKETS.methods_by_name['deleteVenue']._serialized_options = b'\202\323\344\223\002\030*\023/eventTickets/venue:\001*\222A\365\001\n\006Venues\022\014Delete Venue\032\334\001Deletes an existing Venue. Deleting a Venue, Events & Tickets for the Venue being deleted and invalidated in the customers Mobile Wallet; rendering them unusable. This method is irreversible and should be used with care.'
  _EVENTTICKETS.methods_by_name['listVenues']._options = None
  _EVENTTICKETS.methods_by_name['listVenues']._serialized_options = b'\202\323\344\223\002\031\"\024/eventTickets/venues:\001*\222A?\n\006Venues\022\013List Venues\032(Lists all Venues for the logged in user.'
  _EVENTTICKETS.methods_by_name['createEvent']._options = None
  _EVENTTICKETS.methods_by_name['createEvent']._serialized_options = b'\202\323\344\223\002\030\"\023/eventTickets/event:\001*\222A\321\001\n\006Events\022\014Create Event\032\270\001Creates a new Event instance for a Production. You don\'t need to pass in the full Production and Venue objects if they already exist, you can provide just the id and it will work fine.'
  _EVENTTICKETS.methods_by_name['updateEvent']._options = None
  _EVENTTICKETS.methods_by_name['updateEvent']._serialized_options = b'\202\323\344\223\002\030\032\023/eventTickets/event:\001*\222A\342\001\n\006Events\022\014Update Event\032\311\001Fully updates an existing Event. Requires ID to be set. Note1: changes will update & affect all existing tickets related to this event. Note2: Production and Venue cannot be changed from this endpoint.'
  _EVENTTICKETS.methods_by_name['patchEvent']._options = None
  _EVENTTICKETS.methods_by_name['patchEvent']._serialized_options = b'\202\323\344\223\002\0302\023/eventTickets/event:\001*\222A\242\001\n\006Events\022\013Patch Event\032\212\001Partially updates an existing Event. Requires ID to be set. Note: changes will update & affect all existing tickets related to this event.'
  _EVENTTICKETS.methods_by_name['getEventById']._options = None
  _EVENTTICKETS.methods_by_name['getEventById']._serialized_options = b'\202\323\344\223\002\035\022\033/eventTickets/event/id/{id}\222A8\n\006Events\022\017Get Event by ID\032\035Gets an existing Event by ID.'
  _EVENTTICKETS.methods_by_name['getEventByStartDateAndVenue']._options = None
  _EVENTTICKETS.methods_by_name['getEventByStartDateAndVenue']._serialized_options = b'\202\323\344\223\002\035\022\033/eventTickets/event/details\222AS\n\006Events\022\037Get Event by Start Date & Venue\032(Gets an existing Event by event details.'
  _EVENTTICKETS.methods_by_name['deleteEvent']._options = None
  _EVENTTICKETS.methods_by_name['deleteEvent']._serialized_options = b'\202\323\344\223\002\030*\023/eventTickets/event:\001*\222A\222\002\n\006Events\022\014Delete Event\032\371\001Deletes an existing Event. Requires ID to be set. Deleting an Event results in all tickets for the Event being deleted and invalidated in the customers Mobile Wallet; rendering them unusable. This method is irreversible and should be used with care.'
  _EVENTTICKETS.methods_by_name['listEvents']._options = None
  _EVENTTICKETS.methods_by_name['listEvents']._serialized_options = b'\202\323\344\223\002\036\"\031/eventTickets/events/list:\001*\222A9\n\006Events\022\013List Events\032\"Lists all Events for a Production.'
  _EVENTTICKETS.methods_by_name['createTicketType']._options = None
  _EVENTTICKETS.methods_by_name['createTicketType']._serialized_options = b'\202\323\344\223\002\035\"\030/eventTickets/ticketType:\001*\222A7\n\014Ticket Types\022\013Ticket Type\032\032Creates a new Ticket Type.'
  _EVENTTICKETS.methods_by_name['updateTicketType']._options = None
  _EVENTTICKETS.methods_by_name['updateTicketType']._serialized_options = b'\202\323\344\223\002\035\032\030/eventTickets/ticketType:\001*\222A\231\001\n\014Ticket Types\022\022Update Ticket Type\032uUpdates an existing Ticket Type. Note: changes will update & affect all existing Tickets related to this Ticket Type.'
  _EVENTTICKETS.methods_by_name['patchTicketType']._options = None
  _EVENTTICKETS.methods_by_name['patchTicketType']._serialized_options = b'\202\323\344\223\002\0352\030/eventTickets/ticketType:\001*\222A\242\001\n\014Ticket Types\022\021Patch Ticket Type\032\177Partially updates an existing Ticket Type. Note: changes will update & affect all existing Tickets related to this Ticket Type.'
  _EVENTTICKETS.methods_by_name['getTicketTypeById']._options = None
  _EVENTTICKETS.methods_by_name['getTicketTypeById']._serialized_options = b'\202\323\344\223\002\"\022 /eventTickets/ticketType/id/{id}\222AR\n\014Ticket Types\022\035Get Ticket Type by PassKit ID\032#Gets an existing Ticket Type by ID.'
  _EVENTTICKETS.methods_by_name['getTicketTypeByUserDefinedId']._options = None
  _EVENTTICKETS.methods_by_name['getTicketTypeByUserDefinedId']._serialized_options = b'\202\323\344\223\0023\0221/eventTickets/ticketType/uid/{productionId}/{uid}\222Ax\n\014Ticket Types\022\"Get Ticket Type by User Defined ID\032DGets an existing Ticket Type by User Defined ID (and Production ID).'
  _EVENTTICKETS.methods_by_name['deleteTicketType']._options = None
  _EVENTTICKETS.methods_by_name['deleteTicketType']._serialized_options = b'\202\323\344\223\002\035*\030/eventTickets/ticketType:\001*\222A\306\002\n\014Ticket Types\022\022Delete Ticket Type\032\241\002Deletes an existing Ticket Type by ID, or User Defined ID (and Production ID). Deleting a Ticket Type results in the tickets for the Ticket Type being deleted and invalidated in the customers Mobile Wallet; rendering them unusable. This method is irreversible and should be used with care.'
  _EVENTTICKETS.methods_by_name['listTicketTypes']._options = None
  _EVENTTICKETS.methods_by_name['listTicketTypes']._serialized_options = b'\202\323\344\223\002-\"(/eventTickets/ticketTypes/{productionId}:\001*\222AK\n\014Ticket Types\022\021List Ticket Types\032(Lists all Ticket Types for a Production.'
  _EVENTTICKETS.methods_by_name['issueTicket']._options = None
  _EVENTTICKETS.methods_by_name['issueTicket']._serialized_options = b'\202\323\344\223\002\031\"\024/eventTickets/ticket:\001*\222A\220\002\n\007Tickets\022\014Issue Ticket\032\366\001Creates a new unique Ticket record by PassKit IDs. If the Event does not yet exist, it will automatically be created. The combination of event.production.id, event.startDate, event.venue.id & ticket.ticketTypeUid is enforced as unique for Events.'
  _EVENTTICKETS.methods_by_name['issueTicketById']._options = None
  _EVENTTICKETS.methods_by_name['issueTicketById']._serialized_options = b'\202\323\344\223\002\034\"\027/eventTickets/ticket/id:\001*\222A\331\002\n\007Tickets\022\014Issue Ticket\032\277\002Creates a new unique Ticket record by User Defined IDs. User Defined IDs for Production, Venue and TicketType are required. If the Event does not yet exist, it will automatically be created. The combination of event.production.id, event.startDate, event.venue.id & ticket.ticketTypeUid is enforced as unique for Events.'
  _EVENTTICKETS.methods_by_name['updateTicket']._options = None
  _EVENTTICKETS.methods_by_name['updateTicket']._serialized_options = b'\202\323\344\223\002\031\032\024/eventTickets/ticket:\001*\222A\222\001\n\007Tickets\022\rUpdate Ticket\032xUpdates an existing Ticket. Requires ticket.ID to be set, or ticket.ticketNumber + ticket.event.production.id to be set.'
  _EVENTTICKETS.methods_by_name['patchPerson']._options = None
  _EVENTTICKETS.methods_by_name['patchPerson']._serialized_options = b'\202\323\344\223\002 2\033/eventTickets/ticket/person:\001*\222A]\n\007Tickets\022\033Update Personal Information\0325Updates personal information of a event ticket holder'
  _EVENTTICKETS.methods_by_name['validateTicket']._options = None
  _EVENTTICKETS.methods_by_name['validateTicket']._serialized_options = b'\202\323\344\223\002\"\032\035/eventTickets/ticket/validate:\001*\222A\377\001\n\007Tickets\022\017Validate Ticket\032\342\001Validates an existing Ticket. Use this endpoint when you want to check validity of a ticket. Tickets can be validated multiple times. Requires ticket.id to be set, or ticket.ticketNumber + ticket.event.production.id to be set.'
  _EVENTTICKETS.methods_by_name['redeemTicket']._options = None
  _EVENTTICKETS.methods_by_name['redeemTicket']._serialized_options = b'\202\323\344\223\002 \032\033/eventTickets/ticket/redeem:\001*\222A\256\001\n\007Tickets\022\rRedeem Ticket\032\223\001Redeems an existing Ticket. Use this endpoint when you want to capture redemption data and trigger the switch to the redeemed design of the Ticket.'
  _EVENTTICKETS.methods_by_name['redeemTicketsByOrderNumber']._options = None
  _EVENTTICKETS.methods_by_name['redeemTicketsByOrderNumber']._serialized_options = b'\202\323\344\223\002-\032(/eventTickets/tickets/orderNumber/redeem:\001*\222A\315\001\n\007Tickets\022\036Redeem Tickets by Order Number\032\241\001Redeems existing Tickets by Order Number. Use this endpoint when you want to capture redemption data and trigger the switch to the redeemed design of the Ticket.'
  _EVENTTICKETS.methods_by_name['getTicketById']._options = None
  _EVENTTICKETS.methods_by_name['getTicketById']._serialized_options = b'\202\323\344\223\002\036\022\034/eventTickets/ticket/id/{id}\222A8\n\007Tickets\022\020Get Ticket by ID\032\033Gets a Ticket record by ID.'
  _EVENTTICKETS.methods_by_name['getTicketByTicketNumber']._options = None
  _EVENTTICKETS.methods_by_name['getTicketByTicketNumber']._serialized_options = b'\202\323\344\223\002#\022!/eventTickets/ticket/ticketNumber\222AN\n\007Tickets\022\033Get Ticket by Ticket Number\032&Gets a Ticket record by Ticket Number.'
  _EVENTTICKETS.methods_by_name['getTicketsByOrderNumber']._options = None
  _EVENTTICKETS.methods_by_name['getTicketsByOrderNumber']._serialized_options = b'\202\323\344\223\002#\022!/eventTickets/tickets/orderNumber\222AL\n\007Tickets\022\033Get Tickets by Order Number\032$Gets Ticket records by Order Number.'
  _EVENTTICKETS.methods_by_name['getEventTicketPass']._options = None
  _EVENTTICKETS.methods_by_name['getEventTicketPass']._serialized_options = b'\202\323\344\223\002\027\"\022/eventTickets/pass:\001*\222A\276\001\n\007Tickets\022\025Get Event Ticket Pass\032\233\001Retrieves digital event ticket pass(es) in the requested format based on the index provided. Only one of ticketId, ticketNumber or orderNumber is required.'
  _EVENTTICKETS.methods_by_name['deleteTicket']._options = None
  _EVENTTICKETS.methods_by_name['deleteTicket']._serialized_options = b'\202\323\344\223\002\031*\024/eventTickets/ticket:\001*\222A\260\002\n\007Tickets\022\rDelete Ticket\032\225\002Delete an existing Ticket by Id or Ticket Number. Invalidates the ticket in the customers Mobile Wallet; rendering it useless. This method is irreversible and should be used with care. Requires ticket.ID to be set, or ticket.ticketNumber + ticket.event.production.id to be set.'
  _EVENTTICKETS.methods_by_name['deleteTicketsByOrderNumber']._options = None
  _EVENTTICKETS.methods_by_name['deleteTicketsByOrderNumber']._serialized_options = b'\202\323\344\223\002\036*\031/eventTickets/orderNumber:\001*\222A\333\001\n\007Tickets\022\036Delete Tickets by Order Number\032\257\001Delete existing Ticketd by Order Number. Invalidates the ticket in the customers Mobile Wallet; rendering it useless. This method is irreversible and should be used with care.'
  _EVENTTICKETS.methods_by_name['listTickets']._options = None
  _EVENTTICKETS.methods_by_name['listTickets']._serialized_options = b'\202\323\344\223\002\037\"\032/eventTickets/tickets/list:\001*\222AP\n\007Tickets\022\014List Tickets\0327List all tickets for a Production. Supports pagination.'
  _EVENTTICKETS.methods_by_name['countTickets']._options = None
  _EVENTTICKETS.methods_by_name['countTickets']._serialized_options = b'\202\323\344\223\002 \"\033/eventTickets/tickets/count:\001*\222Ad\n\007Tickets\022\rCount Tickets\032JCount all tickets for a Production, Event, Ticket Type and / or Start Date'
  _EVENTTICKETS._serialized_start=400
  _EVENTTICKETS._serialized_end=11638
# @@protoc_insertion_point(module_scope)
