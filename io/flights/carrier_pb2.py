# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: io/flights/carrier.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import builder as _builder
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from io.common import localization_pb2 as io_dot_common_dot_localization__pb2
from protoc_gen_openapiv2.options import annotations_pb2 as protoc__gen__openapiv2_dot_options_dot_annotations__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x18io/flights/carrier.proto\x12\x07\x66lights\x1a\x1cio/common/localization.proto\x1a.protoc-gen-openapiv2/options/annotations.proto\"\xaf\x04\n\x07\x43\x61rrier\x12,\n\x0fiataCarrierCode\x18\x01 \x01(\tB\x13\x92\x41\x10\x8a\x01\r^[A-Z0-9]{2}$\x12,\n\x0ficaoCarrierCode\x18\x02 \x01(\tB\x13\x92\x41\x10\x8a\x01\r^[A-Z0-9]{3}$\x12(\n\x12iataAccountingCode\x18\x03 \x01(\x05\x42\x0c\x92\x41\tY\x00\x00\x00\x00\x00\x38\x8f@\x12\x13\n\x0b\x61irlineName\x18\x04 \x01(\t\x12\x31\n\x14localizedAirlineName\x18\x05 \x01(\x0b\x32\x13.io.LocalizedString\x12\x1a\n\x12passTypeIdentifier\x18\x06 \x01(\t\x12\x14\n\x0cprivateKeyId\x18\x07 \x01(\t:\xa3\x02\x92\x41\x9f\x02\n\x9c\x02*\x07\x43\x61rrier2\xdb\x01\x41 carrier record contains details of the carrier.  The carrier will be the issuer of the boarding pass and may be used as a marketing or operating carrier.  All marketing and operating carriers require a Carrier record.\xd2\x01\x0fiataCarrierCode\xd2\x01\x0b\x61irlineName\xd2\x01\x12passTypeIdentifier\"\"\n\x0b\x43\x61rrierCode\x12\x13\n\x0b\x63\x61rrierCode\x18\x01 \x01(\tB_\n\x18\x63om.passkit.grpc.FlightsZ,stash.passkit.com/io/model/sdk/go/io/flights\xaa\x02\x14PassKit.Grpc.Flightsb\x06proto3')

_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'io.flights.carrier_pb2', globals())
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'\n\030com.passkit.grpc.FlightsZ,stash.passkit.com/io/model/sdk/go/io/flights\252\002\024PassKit.Grpc.Flights'
  _CARRIER.fields_by_name['iataCarrierCode']._options = None
  _CARRIER.fields_by_name['iataCarrierCode']._serialized_options = b'\222A\020\212\001\r^[A-Z0-9]{2}$'
  _CARRIER.fields_by_name['icaoCarrierCode']._options = None
  _CARRIER.fields_by_name['icaoCarrierCode']._serialized_options = b'\222A\020\212\001\r^[A-Z0-9]{3}$'
  _CARRIER.fields_by_name['iataAccountingCode']._options = None
  _CARRIER.fields_by_name['iataAccountingCode']._serialized_options = b'\222A\tY\000\000\000\000\0008\217@'
  _CARRIER._options = None
  _CARRIER._serialized_options = b'\222A\237\002\n\234\002*\007Carrier2\333\001A carrier record contains details of the carrier.  The carrier will be the issuer of the boarding pass and may be used as a marketing or operating carrier.  All marketing and operating carriers require a Carrier record.\322\001\017iataCarrierCode\322\001\013airlineName\322\001\022passTypeIdentifier'
  _CARRIER._serialized_start=116
  _CARRIER._serialized_end=675
  _CARRIERCODE._serialized_start=677
  _CARRIERCODE._serialized_end=711
# @@protoc_insertion_point(module_scope)
