# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from io.common import common_objects_pb2 as io_dot_common_dot_common__objects__pb2
from io.common import message_pb2 as io_dot_common_dot_message__pb2


class MessagesStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.getMessage = channel.unary_unary(
                '/io.Messages/getMessage',
                request_serializer=io_dot_common_dot_common__objects__pb2.Id.SerializeToString,
                response_deserializer=io_dot_common_dot_message__pb2.Message.FromString,
                )
        self.createMessage = channel.unary_unary(
                '/io.Messages/createMessage',
                request_serializer=io_dot_common_dot_message__pb2.Message.SerializeToString,
                response_deserializer=io_dot_common_dot_common__objects__pb2.Id.FromString,
                )
        self.updateMessage = channel.unary_unary(
                '/io.Messages/updateMessage',
                request_serializer=io_dot_common_dot_message__pb2.Message.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.deleteMessage = channel.unary_unary(
                '/io.Messages/deleteMessage',
                request_serializer=io_dot_common_dot_common__objects__pb2.Id.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.sendMessage = channel.unary_unary(
                '/io.Messages/sendMessage',
                request_serializer=io_dot_common_dot_message__pb2.SendMessageRequest.SerializeToString,
                response_deserializer=io_dot_common_dot_message__pb2.SendMessageResponse.FromString,
                )


class MessagesServicer(object):
    """Missing associated documentation comment in .proto file."""

    def getMessage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def createMessage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def updateMessage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def deleteMessage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def sendMessage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MessagesServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'getMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.getMessage,
                    request_deserializer=io_dot_common_dot_common__objects__pb2.Id.FromString,
                    response_serializer=io_dot_common_dot_message__pb2.Message.SerializeToString,
            ),
            'createMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.createMessage,
                    request_deserializer=io_dot_common_dot_message__pb2.Message.FromString,
                    response_serializer=io_dot_common_dot_common__objects__pb2.Id.SerializeToString,
            ),
            'updateMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.updateMessage,
                    request_deserializer=io_dot_common_dot_message__pb2.Message.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'deleteMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.deleteMessage,
                    request_deserializer=io_dot_common_dot_common__objects__pb2.Id.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'sendMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.sendMessage,
                    request_deserializer=io_dot_common_dot_message__pb2.SendMessageRequest.FromString,
                    response_serializer=io_dot_common_dot_message__pb2.SendMessageResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'io.Messages', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Messages(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def getMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/io.Messages/getMessage',
            io_dot_common_dot_common__objects__pb2.Id.SerializeToString,
            io_dot_common_dot_message__pb2.Message.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def createMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/io.Messages/createMessage',
            io_dot_common_dot_message__pb2.Message.SerializeToString,
            io_dot_common_dot_common__objects__pb2.Id.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def updateMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/io.Messages/updateMessage',
            io_dot_common_dot_message__pb2.Message.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def deleteMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/io.Messages/deleteMessage',
            io_dot_common_dot_common__objects__pb2.Id.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def sendMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/io.Messages/sendMessage',
            io_dot_common_dot_message__pb2.SendMessageRequest.SerializeToString,
            io_dot_common_dot_message__pb2.SendMessageResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
