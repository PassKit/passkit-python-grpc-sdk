# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from io.certificate import certificate_pb2 as io_dot_certificate_dot_certificate__pb2
from io.common import common_objects_pb2 as io_dot_common_dot_common__objects__pb2
from io.common import filter_pb2 as io_dot_common_dot_filter__pb2
from io.common import pagination_pb2 as io_dot_common_dot_pagination__pb2


class CertificatesStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.getAppleCertificateData = channel.unary_unary(
                '/io.Certificates/getAppleCertificateData',
                request_serializer=io_dot_certificate_dot_certificate__pb2.PassTypeIdentifier.SerializeToString,
                response_deserializer=io_dot_certificate_dot_certificate__pb2.CertificateData.FromString,
                )
        self.getCertificateSigningRequest = channel.unary_unary(
                '/io.Certificates/getCertificateSigningRequest',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=io_dot_certificate_dot_certificate__pb2.CertificateSigningRequest.FromString,
                )
        self.addAppleCertificate = channel.unary_unary(
                '/io.Certificates/addAppleCertificate',
                request_serializer=io_dot_common_dot_common__objects__pb2.FileBytes.SerializeToString,
                response_deserializer=io_dot_certificate_dot_certificate__pb2.CertificateData.FromString,
                )
        self.updateAppleCertificate = channel.unary_unary(
                '/io.Certificates/updateAppleCertificate',
                request_serializer=io_dot_common_dot_common__objects__pb2.FileBytes.SerializeToString,
                response_deserializer=io_dot_certificate_dot_certificate__pb2.CertificateData.FromString,
                )
        self.listAppleCertificatesDeprecated = channel.unary_stream(
                '/io.Certificates/listAppleCertificatesDeprecated',
                request_serializer=io_dot_common_dot_pagination__pb2.Pagination.SerializeToString,
                response_deserializer=io_dot_certificate_dot_certificate__pb2.CertificateData.FromString,
                )
        self.listAppleCertificates = channel.unary_stream(
                '/io.Certificates/listAppleCertificates',
                request_serializer=io_dot_common_dot_filter__pb2.Filters.SerializeToString,
                response_deserializer=io_dot_certificate_dot_certificate__pb2.CertificateData.FromString,
                )
        self.countAppleCertificatesDeprecated = channel.unary_unary(
                '/io.Certificates/countAppleCertificatesDeprecated',
                request_serializer=io_dot_common_dot_pagination__pb2.Pagination.SerializeToString,
                response_deserializer=io_dot_common_dot_common__objects__pb2.Count.FromString,
                )
        self.countAppleCertificates = channel.unary_unary(
                '/io.Certificates/countAppleCertificates',
                request_serializer=io_dot_common_dot_filter__pb2.Filters.SerializeToString,
                response_deserializer=io_dot_common_dot_common__objects__pb2.Count.FromString,
                )
        self.sendNFCSigningCredentials = channel.unary_unary(
                '/io.Certificates/sendNFCSigningCredentials',
                request_serializer=io_dot_certificate_dot_certificate__pb2.NFCSigningCredentialsRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )


class CertificatesServicer(object):
    """Missing associated documentation comment in .proto file."""

    def getAppleCertificateData(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getCertificateSigningRequest(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def addAppleCertificate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def updateAppleCertificate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def listAppleCertificatesDeprecated(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def listAppleCertificates(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def countAppleCertificatesDeprecated(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def countAppleCertificates(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def sendNFCSigningCredentials(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_CertificatesServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'getAppleCertificateData': grpc.unary_unary_rpc_method_handler(
                    servicer.getAppleCertificateData,
                    request_deserializer=io_dot_certificate_dot_certificate__pb2.PassTypeIdentifier.FromString,
                    response_serializer=io_dot_certificate_dot_certificate__pb2.CertificateData.SerializeToString,
            ),
            'getCertificateSigningRequest': grpc.unary_unary_rpc_method_handler(
                    servicer.getCertificateSigningRequest,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=io_dot_certificate_dot_certificate__pb2.CertificateSigningRequest.SerializeToString,
            ),
            'addAppleCertificate': grpc.unary_unary_rpc_method_handler(
                    servicer.addAppleCertificate,
                    request_deserializer=io_dot_common_dot_common__objects__pb2.FileBytes.FromString,
                    response_serializer=io_dot_certificate_dot_certificate__pb2.CertificateData.SerializeToString,
            ),
            'updateAppleCertificate': grpc.unary_unary_rpc_method_handler(
                    servicer.updateAppleCertificate,
                    request_deserializer=io_dot_common_dot_common__objects__pb2.FileBytes.FromString,
                    response_serializer=io_dot_certificate_dot_certificate__pb2.CertificateData.SerializeToString,
            ),
            'listAppleCertificatesDeprecated': grpc.unary_stream_rpc_method_handler(
                    servicer.listAppleCertificatesDeprecated,
                    request_deserializer=io_dot_common_dot_pagination__pb2.Pagination.FromString,
                    response_serializer=io_dot_certificate_dot_certificate__pb2.CertificateData.SerializeToString,
            ),
            'listAppleCertificates': grpc.unary_stream_rpc_method_handler(
                    servicer.listAppleCertificates,
                    request_deserializer=io_dot_common_dot_filter__pb2.Filters.FromString,
                    response_serializer=io_dot_certificate_dot_certificate__pb2.CertificateData.SerializeToString,
            ),
            'countAppleCertificatesDeprecated': grpc.unary_unary_rpc_method_handler(
                    servicer.countAppleCertificatesDeprecated,
                    request_deserializer=io_dot_common_dot_pagination__pb2.Pagination.FromString,
                    response_serializer=io_dot_common_dot_common__objects__pb2.Count.SerializeToString,
            ),
            'countAppleCertificates': grpc.unary_unary_rpc_method_handler(
                    servicer.countAppleCertificates,
                    request_deserializer=io_dot_common_dot_filter__pb2.Filters.FromString,
                    response_serializer=io_dot_common_dot_common__objects__pb2.Count.SerializeToString,
            ),
            'sendNFCSigningCredentials': grpc.unary_unary_rpc_method_handler(
                    servicer.sendNFCSigningCredentials,
                    request_deserializer=io_dot_certificate_dot_certificate__pb2.NFCSigningCredentialsRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'io.Certificates', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Certificates(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def getAppleCertificateData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/io.Certificates/getAppleCertificateData',
            io_dot_certificate_dot_certificate__pb2.PassTypeIdentifier.SerializeToString,
            io_dot_certificate_dot_certificate__pb2.CertificateData.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getCertificateSigningRequest(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/io.Certificates/getCertificateSigningRequest',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            io_dot_certificate_dot_certificate__pb2.CertificateSigningRequest.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def addAppleCertificate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/io.Certificates/addAppleCertificate',
            io_dot_common_dot_common__objects__pb2.FileBytes.SerializeToString,
            io_dot_certificate_dot_certificate__pb2.CertificateData.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def updateAppleCertificate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/io.Certificates/updateAppleCertificate',
            io_dot_common_dot_common__objects__pb2.FileBytes.SerializeToString,
            io_dot_certificate_dot_certificate__pb2.CertificateData.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def listAppleCertificatesDeprecated(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/io.Certificates/listAppleCertificatesDeprecated',
            io_dot_common_dot_pagination__pb2.Pagination.SerializeToString,
            io_dot_certificate_dot_certificate__pb2.CertificateData.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def listAppleCertificates(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/io.Certificates/listAppleCertificates',
            io_dot_common_dot_filter__pb2.Filters.SerializeToString,
            io_dot_certificate_dot_certificate__pb2.CertificateData.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def countAppleCertificatesDeprecated(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/io.Certificates/countAppleCertificatesDeprecated',
            io_dot_common_dot_pagination__pb2.Pagination.SerializeToString,
            io_dot_common_dot_common__objects__pb2.Count.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def countAppleCertificates(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/io.Certificates/countAppleCertificates',
            io_dot_common_dot_filter__pb2.Filters.SerializeToString,
            io_dot_common_dot_common__objects__pb2.Count.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def sendNFCSigningCredentials(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/io.Certificates/sendNFCSigningCredentials',
            io_dot_certificate_dot_certificate__pb2.NFCSigningCredentialsRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
